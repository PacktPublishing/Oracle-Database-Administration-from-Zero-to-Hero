<?xml version="1.0" encoding="UTF-8"?><!--Designed and generated by Altova StyleVision Enterprise Edition 2014 (x64) - see http://www.altova.com/stylevision for more information.--><xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:altova="http://www.altova.com" xmlns:altovaext="http://www.altova.com/xslt-extensions" xmlns:clitype="clitype" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:iso4217="http://www.xbrl.org/2003/iso4217" xmlns:ix="http://www.xbrl.org/2008/inlineXBRL" xmlns:java="java" xmlns:link="http://www.xbrl.org/2003/linkbase" xmlns:n1="http://oracle.com/datamodeler/reports/searchresults" xmlns:sps="http://www.altova.com/StyleVision/user-xpath-functions" xmlns:xbrldi="http://xbrl.org/2006/xbrldi" xmlns:xbrli="http://www.xbrl.org/2003/instance" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" exclude-result-prefixes="#all">	<xsl:output version="4.0" method="html" indent="no" encoding="UTF-8" use-character-maps="spaces" doctype-public="-//W3C//DTD HTML 4.01 Transitional//EN" doctype-system="http://www.w3.org/TR/html4/loose.dtd"/>	<xsl:character-map name="spaces">		<xsl:output-character character="&#160;" string="&amp;nbsp;"/>	</xsl:character-map>	<xsl:param name="altova:bGeneratingFromPxf" select="false()"/>	<xsl:param name="SV_OutputFormat" select="'HTML'"/>	<xsl:param name="SV_BaseOutputFileName" as="xs:string?">		<xsl:sequence select="for $i in altovaext:get-base-output-uri(), $j in tokenize( $i, &apos;[/\\]&apos; )[last()] return replace( $j, &apos;\.[^\.\s#%;]*$&apos;, &apos;&apos; )" use-when="function-available(&apos;altovaext:get-base-output-uri&apos;)"/>	</xsl:param>	<xsl:param name="SV_GeneratedFileNamePrefix" select="if ( $SV_BaseOutputFileName ) then $SV_BaseOutputFileName else &apos;SearchResults&apos;" as="xs:string?"/>	<xsl:param name="p1"/>	<xsl:param name="p2"/>	<xsl:variable name="XML" select="/"/>	<xsl:variable name="altova:nPxPerIn" select="96"/>	<xsl:variable name="altova:CssImages" select="()"/>	<xsl:template match="/">		<xsl:call-template name="altova:Root"/>	</xsl:template>	<xsl:template name="altova:Root">		<html>			<head>				<title/>				<meta name="generator" content="Altova StyleVision Enterprise Edition 2014 (x64) (http://www.altova.com)"/>				<meta http-equiv="X-UA-Compatible" content="IE=7"/>				<xsl:value-of select="normalize-space(concat('&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;', $p1, '&quot;>'))" disable-output-escaping="yes"/>                <xsl:value-of select="normalize-space(concat('&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;', $p2, '&quot;>'))" disable-output-escaping="yes"/>				<xsl:comment>[if IE]&gt;&lt;STYLE type=&quot;text/css&quot;&gt;.altova-rotate-left-textbox{filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3)} .altova-rotate-right-textbox{filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=1)} &lt;/STYLE&gt;&lt;![endif]</xsl:comment>				<xsl:comment>[if !IE]&gt;&lt;!</xsl:comment>				<style type="text/css">.altova-rotate-left-textbox{-webkit-transform: rotate(-90deg) translate(-100%, 0%); -webkit-transform-origin: 0% 0%;-moz-transform: rotate(-90deg) translate(-100%, 0%); -moz-transform-origin: 0% 0%;-ms-transform: rotate(-90deg) translate(-100%, 0%); -ms-transform-origin: 0% 0%;}.altova-rotate-right-textbox{-webkit-transform: rotate(90deg) translate(0%, -100%); -webkit-transform-origin: 0% 0%;-moz-transform: rotate(90deg) translate(0%, -100%); -moz-transform-origin: 0% 0%;-ms-transform: rotate(90deg) translate(0%, -100%); -ms-transform-origin: 0% 0%;}</style>				<xsl:comment>&lt;![endif]</xsl:comment>				<style type="text/css">@page { margin-left:2cm; margin-right:2cm; margin-top:2cm; margin-bottom:2cm } @media print { br.altova-page-break { page-break-before: always; } }</style>			</head>			<body style="font-family:Tahoma; font-size:xx-small; ">				<xsl:for-each select="$XML">					<center style="font-size:medium; font-weight:bold; ">						<xsl:for-each select="n1:SearchResults">							<xsl:for-each select="n1:title">								<span class="caption">									<xsl:apply-templates/>								</span>							</xsl:for-each>						</xsl:for-each>					</center>					<p/>					<xsl:if test="n1:SearchResults/n1:showFilter  = &apos;true&apos;">						<p/>						<xsl:variable name="altova:table">							<table class="w_8">								<xsl:variable name="altova:CurrContextGrid_0" select="."/>								<xsl:variable name="altova:ColumnData"/>								<tbody>									<tr>										<td class="td_h_v w_4">											<span>												<xsl:text>Pattern</xsl:text>											</span>										</td>										<td class="td w_4">											<xsl:for-each select="n1:SearchResults">												<xsl:for-each select="n1:pattern">													<xsl:apply-templates/>												</xsl:for-each>											</xsl:for-each>										</td>									</tr>									<tr>										<td class="td_h_v">											<span>												<xsl:text>Filter</xsl:text>											</span>										</td>										<td class="td">											<xsl:for-each select="n1:SearchResults">												<xsl:for-each select="n1:filter">													<xsl:apply-templates/>												</xsl:for-each>											</xsl:for-each>										</td>									</tr>								</tbody>							</table>						</xsl:variable>						<xsl:variable name="altova:col-count" select="sum( for $altova:cell in $altova:table/table/(thead | tbody | tfoot)[ 1 ]/tr[ 1 ]/(th | td) return altova:col-span( $altova:cell ) )"/>						<xsl:variable name="altova:generate-cols" as="xs:boolean*" select="for $altova:pos in 1 to $altova:col-count return true()"/>						<xsl:apply-templates select="$altova:table" mode="altova:generate-table">							<xsl:with-param name="altova:generate-cols" select="$altova:generate-cols"/>						</xsl:apply-templates>					</xsl:if>					<xsl:for-each select="n1:SearchResults">						<xsl:variable name="s0_c1_width" select="n1:sections/n1:section0/n1:c1/n1:width"/>						<xsl:variable name="s0_c2_width" select="n1:sections/n1:section0/n1:c2/n1:width"/>						<xsl:variable name="s0_c3_width" select="n1:sections/n1:section0/n1:c3/n1:width"/>						<xsl:variable name="s0_c4_width" select="n1:sections/n1:section0/n1:c4/n1:width"/>						<xsl:variable name="s0_c5_width" select="n1:sections/n1:section0/n1:c5/n1:width"/>						<xsl:variable name="s0_c6_width" select="n1:sections/n1:section0/n1:c6/n1:width"/>						<xsl:variable name="s0_c7_width" select="n1:sections/n1:section0/n1:c7/n1:width"/>						<xsl:variable name="s0_c8_width" select="n1:sections/n1:section0/n1:c8/n1:width"/>						<xsl:variable name="s0_c9_width" select="n1:sections/n1:section0/n1:c9/n1:width"/>						<xsl:variable name="s0_c10_width" select="n1:sections/n1:section0/n1:c10/n1:width"/>						<xsl:variable name="s0_c11_width" select="n1:sections/n1:section0/n1:c11/n1:width"/>						<xsl:variable name="s0_c12_width" select="n1:sections/n1:section0/n1:c12/n1:width"/>						<xsl:variable name="s0_c13_width" select="n1:sections/n1:section0/n1:c13/n1:width"/>						<xsl:variable name="s0_c14_width" select="n1:sections/n1:section0/n1:c14/n1:width"/>						<xsl:variable name="s0_c15_width" select="n1:sections/n1:section0/n1:c15/n1:width"/>						<xsl:variable name="s0_c16_width" select="n1:sections/n1:section0/n1:c16/n1:width"/>						<xsl:variable name="s0_c17_width" select="n1:sections/n1:section0/n1:c17/n1:width"/>						<xsl:variable name="s0_c18_width" select="n1:sections/n1:section0/n1:c18/n1:width"/>						<xsl:variable name="s0_c19_width" select="n1:sections/n1:section0/n1:c19/n1:width"/>						<xsl:variable name="s0_c20_width" select="n1:sections/n1:section0/n1:c20/n1:width"/>						<xsl:variable name="s0_c21_width" select="n1:sections/n1:section0/n1:c21/n1:width"/>						<xsl:variable name="s0_c22_width" select="n1:sections/n1:section0/n1:c22/n1:width"/>						<xsl:variable name="s0_c23_width" select="n1:sections/n1:section0/n1:c23/n1:width"/>						<xsl:variable name="s0_c24_width" select="n1:sections/n1:section0/n1:c24/n1:width"/>						<xsl:variable name="s0_c25_width" select="n1:sections/n1:section0/n1:c25/n1:width"/>						<xsl:variable name="s0_c26_width" select="n1:sections/n1:section0/n1:c26/n1:width"/>						<xsl:variable name="s0_c27_width" select="n1:sections/n1:section0/n1:c27/n1:width"/>						<xsl:variable name="s0_c28_width" select="n1:sections/n1:section0/n1:c28/n1:width"/>						<xsl:variable name="s0_c29_width" select="n1:sections/n1:section0/n1:c29/n1:width"/>						<xsl:variable name="s0_c30_width" select="n1:sections/n1:section0/n1:c30/n1:width"/>						<xsl:variable name="s0_c1_show" select="n1:sections/n1:section0/n1:c1/n1:show"/>						<xsl:variable name="s0_c2_show" select="n1:sections/n1:section0/n1:c2/n1:show"/>						<xsl:variable name="s0_c3_show" select="n1:sections/n1:section0/n1:c3/n1:show"/>						<xsl:variable name="s0_c4_show" select="n1:sections/n1:section0/n1:c4/n1:show"/>						<xsl:variable name="s0_c5_show" select="n1:sections/n1:section0/n1:c5/n1:show"/>						<xsl:variable name="s0_c6_show" select="n1:sections/n1:section0/n1:c6/n1:show"/>						<xsl:variable name="s0_c7_show" select="n1:sections/n1:section0/n1:c7/n1:show"/>						<xsl:variable name="s0_c8_show" select="n1:sections/n1:section0/n1:c8/n1:show"/>						<xsl:variable name="s0_c9_show" select="n1:sections/n1:section0/n1:c9/n1:show"/>						<xsl:variable name="s0_c10_show" select="n1:sections/n1:section0/n1:c10/n1:show"/>						<xsl:variable name="s0_c11_show" select="n1:sections/n1:section0/n1:c11/n1:show"/>						<xsl:variable name="s0_c12_show" select="n1:sections/n1:section0/n1:c12/n1:show"/>						<xsl:variable name="s0_c13_show" select="n1:sections/n1:section0/n1:c13/n1:show"/>						<xsl:variable name="s0_c14_show" select="n1:sections/n1:section0/n1:c14/n1:show"/>						<xsl:variable name="s0_c15_show" select="n1:sections/n1:section0/n1:c15/n1:show"/>						<xsl:variable name="s0_c16_show" select="n1:sections/n1:section0/n1:c16/n1:show"/>						<xsl:variable name="s0_c17_show" select="n1:sections/n1:section0/n1:c17/n1:show"/>						<xsl:variable name="s0_c18_show" select="n1:sections/n1:section0/n1:c18/n1:show"/>						<xsl:variable name="s0_c19_show" select="n1:sections/n1:section0/n1:c19/n1:show"/>						<xsl:variable name="s0_c20_show" select="n1:sections/n1:section0/n1:c20/n1:show"/>						<xsl:variable name="s0_c21_show" select="n1:sections/n1:section0/n1:c21/n1:show"/>						<xsl:variable name="s0_c22_show" select="n1:sections/n1:section0/n1:c22/n1:show"/>						<xsl:variable name="s0_c23_show" select="n1:sections/n1:section0/n1:c23/n1:show"/>						<xsl:variable name="s0_c24_show" select="n1:sections/n1:section0/n1:c24/n1:show"/>						<xsl:variable name="s0_c25_show" select="n1:sections/n1:section0/n1:c25/n1:show"/>						<xsl:variable name="s0_c26_show" select="n1:sections/n1:section0/n1:c26/n1:show"/>						<xsl:variable name="s0_c27_show" select="n1:sections/n1:section0/n1:c27/n1:show"/>						<xsl:variable name="s0_c28_show" select="n1:sections/n1:section0/n1:c28/n1:show"/>						<xsl:variable name="s0_c29_show" select="n1:sections/n1:section0/n1:c29/n1:show"/>						<xsl:variable name="s0_c30_show" select="n1:sections/n1:section0/n1:c30/n1:show"/>						<xsl:variable name="s0_c1_h_value" select="n1:sections/n1:section0/n1:c1/n1:customName"/>						<xsl:variable name="s0_c2_h_value" select="n1:sections/n1:section0/n1:c2/n1:customName"/>						<xsl:variable name="s0_c3_h_value" select="n1:sections/n1:section0/n1:c3/n1:customName"/>						<xsl:variable name="s0_c4_h_value" select="n1:sections/n1:section0/n1:c4/n1:customName"/>						<xsl:variable name="s0_c5_h_value" select="n1:sections/n1:section0/n1:c5/n1:customName"/>						<xsl:variable name="s0_c6_h_value" select="n1:sections/n1:section0/n1:c6/n1:customName"/>						<xsl:variable name="s0_c7_h_value" select="n1:sections/n1:section0/n1:c7/n1:customName"/>						<xsl:variable name="s0_c8_h_value" select="n1:sections/n1:section0/n1:c8/n1:customName"/>						<xsl:variable name="s0_c9_h_value" select="n1:sections/n1:section0/n1:c9/n1:customName"/>						<xsl:variable name="s0_c10_h_value" select="n1:sections/n1:section0/n1:c10/n1:customName"/>						<xsl:variable name="s0_c11_h_value" select="n1:sections/n1:section0/n1:c11/n1:customName"/>						<xsl:variable name="s0_c12_h_value" select="n1:sections/n1:section0/n1:c12/n1:customName"/>						<xsl:variable name="s0_c13_h_value" select="n1:sections/n1:section0/n1:c13/n1:customName"/>						<xsl:variable name="s0_c14_h_value" select="n1:sections/n1:section0/n1:c14/n1:customName"/>						<xsl:variable name="s0_c15_h_value" select="n1:sections/n1:section0/n1:c15/n1:customName"/>						<xsl:variable name="s0_c16_h_value" select="n1:sections/n1:section0/n1:c16/n1:customName"/>						<xsl:variable name="s0_c17_h_value" select="n1:sections/n1:section0/n1:c17/n1:customName"/>						<xsl:variable name="s0_c18_h_value" select="n1:sections/n1:section0/n1:c18/n1:customName"/>						<xsl:variable name="s0_c19_h_value" select="n1:sections/n1:section0/n1:c19/n1:customName"/>						<xsl:variable name="s0_c20_h_value" select="n1:sections/n1:section0/n1:c20/n1:customName"/>						<xsl:variable name="s0_c21_h_value" select="n1:sections/n1:section0/n1:c21/n1:customName"/>						<xsl:variable name="s0_c22_h_value" select="n1:sections/n1:section0/n1:c22/n1:customName"/>						<xsl:variable name="s0_c23_h_value" select="n1:sections/n1:section0/n1:c23/n1:customName"/>						<xsl:variable name="s0_c24_h_value" select="n1:sections/n1:section0/n1:c24/n1:customName"/>						<xsl:variable name="s0_c25_h_value" select="n1:sections/n1:section0/n1:c25/n1:customName"/>						<xsl:variable name="s0_c26_h_value" select="n1:sections/n1:section0/n1:c26/n1:customName"/>						<xsl:variable name="s0_c27_h_value" select="n1:sections/n1:section0/n1:c27/n1:customName"/>						<xsl:variable name="s0_c28_h_value" select="n1:sections/n1:section0/n1:c28/n1:customName"/>						<xsl:variable name="s0_c29_h_value" select="n1:sections/n1:section0/n1:c29/n1:customName"/>						<xsl:variable name="s0_c30_h_value" select="n1:sections/n1:section0/n1:c30/n1:customName"/>						<xsl:for-each select="n1:objects">							<xsl:choose>								<xsl:when test="../n1:multiLevel = &apos;true&apos;">									<xsl:for-each select="n1:object">										<xsl:if test="../../n1:UsePageBreaks = &apos;true&apos;">											<br class="altova-page-break" clear="all"/>										</xsl:if>										<p/>										<p/>										<a>											<xsl:attribute name="name">												<xsl:value-of select="n1:values/n1:v0"/>											</xsl:attribute>										</a>										<br/>										<xsl:variable name="altova:table">											<table style="width:{../../n1:sections/n1:section0/@tw}; ">												<xsl:variable name="altova:CurrContextGrid_1" select="."/>												<xsl:variable name="altova:ColumnData"/>												<tbody>													<tr>														<xsl:if test="$altova:CurrContextGrid_1/($s0_c1_show)">															<td style="width:{$s0_c1_width}; " class="td_h_h">																<xsl:for-each select="$s0_c1_h_value">																	<xsl:choose>																		<xsl:when test=". instance of element() or . instance of document-node()">																			<xsl:apply-templates/>																		</xsl:when>																		<xsl:otherwise>																			<xsl:value-of select="."/>																		</xsl:otherwise>																	</xsl:choose>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_1/($s0_c2_show)">															<td style="width:{$s0_c2_width}; " class="td_h_h">																<xsl:for-each select="$s0_c2_h_value">																	<xsl:choose>																		<xsl:when test=". instance of element() or . instance of document-node()">																			<xsl:apply-templates/>																		</xsl:when>																		<xsl:otherwise>																			<xsl:value-of select="."/>																		</xsl:otherwise>																	</xsl:choose>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_1/($s0_c3_show)">															<td style="width:{$s0_c3_width}; " class="td_h_h">																<xsl:for-each select="$s0_c3_h_value">																	<xsl:choose>																		<xsl:when test=". instance of element() or . instance of document-node()">																			<xsl:apply-templates/>																		</xsl:when>																		<xsl:otherwise>																			<xsl:value-of select="."/>																		</xsl:otherwise>																	</xsl:choose>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_1/($s0_c4_show)">															<td style="width:{$s0_c4_width}; " class="td_h_h">																<xsl:for-each select="$s0_c4_h_value">																	<xsl:choose>																		<xsl:when test=". instance of element() or . instance of document-node()">																			<xsl:apply-templates/>																		</xsl:when>																		<xsl:otherwise>																			<xsl:value-of select="."/>																		</xsl:otherwise>																	</xsl:choose>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_1/($s0_c5_show)">															<td style="width:{$s0_c5_width}; " class="td_h_h">																<xsl:for-each select="$s0_c5_h_value">																	<xsl:choose>																		<xsl:when test=". instance of element() or . instance of document-node()">																			<xsl:apply-templates/>																		</xsl:when>																		<xsl:otherwise>																			<xsl:value-of select="."/>																		</xsl:otherwise>																	</xsl:choose>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_1/($s0_c6_show)">															<td style="width:{$s0_c6_width}; " class="td_h_h">																<xsl:for-each select="$s0_c6_h_value">																	<xsl:choose>																		<xsl:when test=". instance of element() or . instance of document-node()">																			<xsl:apply-templates/>																		</xsl:when>																		<xsl:otherwise>																			<xsl:value-of select="."/>																		</xsl:otherwise>																	</xsl:choose>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_1/($s0_c7_show)">															<td style="width:{$s0_c7_width}; " class="td_h_h">																<xsl:for-each select="$s0_c7_h_value">																	<xsl:choose>																		<xsl:when test=". instance of element() or . instance of document-node()">																			<xsl:apply-templates/>																		</xsl:when>																		<xsl:otherwise>																			<xsl:value-of select="."/>																		</xsl:otherwise>																	</xsl:choose>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_1/($s0_c8_show)">															<td style="width:{$s0_c8_width}; " class="td_h_h">																<xsl:for-each select="$s0_c8_h_value">																	<xsl:choose>																		<xsl:when test=". instance of element() or . instance of document-node()">																			<xsl:apply-templates/>																		</xsl:when>																		<xsl:otherwise>																			<xsl:value-of select="."/>																		</xsl:otherwise>																	</xsl:choose>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_1/($s0_c9_show)">															<td style="width:{$s0_c9_width}; " class="td_h_h">																<xsl:for-each select="$s0_c9_h_value">																	<xsl:choose>																		<xsl:when test=". instance of element() or . instance of document-node()">																			<xsl:apply-templates/>																		</xsl:when>																		<xsl:otherwise>																			<xsl:value-of select="."/>																		</xsl:otherwise>																	</xsl:choose>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_1/($s0_c10_show)">															<td style="width:{$s0_c10_width}; " class="td_h_h">																<xsl:for-each select="$s0_c10_h_value">																	<xsl:choose>																		<xsl:when test=". instance of element() or . instance of document-node()">																			<xsl:apply-templates/>																		</xsl:when>																		<xsl:otherwise>																			<xsl:value-of select="."/>																		</xsl:otherwise>																	</xsl:choose>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_1/($s0_c11_show)">															<td style="width:{$s0_c11_width}; " class="td_h_h">																<xsl:for-each select="$s0_c11_h_value">																	<xsl:choose>																		<xsl:when test=". instance of element() or . instance of document-node()">																			<xsl:apply-templates/>																		</xsl:when>																		<xsl:otherwise>																			<xsl:value-of select="."/>																		</xsl:otherwise>																	</xsl:choose>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_1/($s0_c12_show)">															<td style="width:{$s0_c12_width}; " class="td_h_h">																<xsl:for-each select="$s0_c12_h_value">																	<xsl:choose>																		<xsl:when test=". instance of element() or . instance of document-node()">																			<xsl:apply-templates/>																		</xsl:when>																		<xsl:otherwise>																			<xsl:value-of select="."/>																		</xsl:otherwise>																	</xsl:choose>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_1/($s0_c13_show)">															<td style="width:{$s0_c13_width}; " class="td_h_h">																<xsl:for-each select="$s0_c13_h_value">																	<xsl:choose>																		<xsl:when test=". instance of element() or . instance of document-node()">																			<xsl:apply-templates/>																		</xsl:when>																		<xsl:otherwise>																			<xsl:value-of select="."/>																		</xsl:otherwise>																	</xsl:choose>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_1/($s0_c14_show)">															<td style="width:{$s0_c14_width}; " class="td_h_h">																<xsl:for-each select="$s0_c14_h_value">																	<xsl:choose>																		<xsl:when test=". instance of element() or . instance of document-node()">																			<xsl:apply-templates/>																		</xsl:when>																		<xsl:otherwise>																			<xsl:value-of select="."/>																		</xsl:otherwise>																	</xsl:choose>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_1/($s0_c15_show)">															<td style="width:{$s0_c15_width}; " class="td_h_h">																<xsl:for-each select="$s0_c15_h_value">																	<xsl:choose>																		<xsl:when test=". instance of element() or . instance of document-node()">																			<xsl:apply-templates/>																		</xsl:when>																		<xsl:otherwise>																			<xsl:value-of select="."/>																		</xsl:otherwise>																	</xsl:choose>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_1/($s0_c16_show)">															<td style="width:{$s0_c16_width}; " class="td_h_h">																<xsl:for-each select="$s0_c16_h_value">																	<xsl:choose>																		<xsl:when test=". instance of element() or . instance of document-node()">																			<xsl:apply-templates/>																		</xsl:when>																		<xsl:otherwise>																			<xsl:value-of select="."/>																		</xsl:otherwise>																	</xsl:choose>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_1/($s0_c17_show)">															<td style="width:{$s0_c17_width}; " class="td_h_h">																<xsl:for-each select="$s0_c17_h_value">																	<xsl:choose>																		<xsl:when test=". instance of element() or . instance of document-node()">																			<xsl:apply-templates/>																		</xsl:when>																		<xsl:otherwise>																			<xsl:value-of select="."/>																		</xsl:otherwise>																	</xsl:choose>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_1/($s0_c18_show)">															<td style="width:{$s0_c18_width}; " class="td_h_h">																<xsl:for-each select="$s0_c18_h_value">																	<xsl:choose>																		<xsl:when test=". instance of element() or . instance of document-node()">																			<xsl:apply-templates/>																		</xsl:when>																		<xsl:otherwise>																			<xsl:value-of select="."/>																		</xsl:otherwise>																	</xsl:choose>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_1/($s0_c19_show)">															<td style="width:{$s0_c19_width}; " class="td_h_h">																<xsl:for-each select="$s0_c19_h_value">																	<xsl:choose>																		<xsl:when test=". instance of element() or . instance of document-node()">																			<xsl:apply-templates/>																		</xsl:when>																		<xsl:otherwise>																			<xsl:value-of select="."/>																		</xsl:otherwise>																	</xsl:choose>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_1/($s0_c20_show)">															<td style="width:{$s0_c20_width}; " class="td_h_h">																<xsl:for-each select="$s0_c20_h_value">																	<xsl:choose>																		<xsl:when test=". instance of element() or . instance of document-node()">																			<xsl:apply-templates/>																		</xsl:when>																		<xsl:otherwise>																			<xsl:value-of select="."/>																		</xsl:otherwise>																	</xsl:choose>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_1/($s0_c21_show)">															<td style="width:{$s0_c21_width}; " class="td_h_h">																<xsl:for-each select="$s0_c21_h_value">																	<xsl:choose>																		<xsl:when test=". instance of element() or . instance of document-node()">																			<xsl:apply-templates/>																		</xsl:when>																		<xsl:otherwise>																			<xsl:value-of select="."/>																		</xsl:otherwise>																	</xsl:choose>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_1/($s0_c22_show)">															<td style="width:{$s0_c22_width}; " class="td_h_h">																<xsl:for-each select="$s0_c22_h_value">																	<xsl:choose>																		<xsl:when test=". instance of element() or . instance of document-node()">																			<xsl:apply-templates/>																		</xsl:when>																		<xsl:otherwise>																			<xsl:value-of select="."/>																		</xsl:otherwise>																	</xsl:choose>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_1/($s0_c23_show)">															<td style="width:{$s0_c23_width}; " class="td_h_h">																<xsl:for-each select="$s0_c23_h_value">																	<xsl:choose>																		<xsl:when test=". instance of element() or . instance of document-node()">																			<xsl:apply-templates/>																		</xsl:when>																		<xsl:otherwise>																			<xsl:value-of select="."/>																		</xsl:otherwise>																	</xsl:choose>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_1/($s0_c24_show)">															<td style="width:{$s0_c24_width}; " class="td_h_h">																<xsl:for-each select="$s0_c25_h_value">																	<xsl:choose>																		<xsl:when test=". instance of element() or . instance of document-node()">																			<xsl:apply-templates/>																		</xsl:when>																		<xsl:otherwise>																			<xsl:value-of select="."/>																		</xsl:otherwise>																	</xsl:choose>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_1/($s0_c25_show)">															<td style="width:{$s0_c25_width}; " class="td_h_h">																<xsl:for-each select="$s0_c25_h_value">																	<xsl:choose>																		<xsl:when test=". instance of element() or . instance of document-node()">																			<xsl:apply-templates/>																		</xsl:when>																		<xsl:otherwise>																			<xsl:value-of select="."/>																		</xsl:otherwise>																	</xsl:choose>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_1/($s0_c26_show)">															<td style="width:{$s0_c26_width}; " class="td_h_h">																<xsl:for-each select="$s0_c26_h_value">																	<xsl:choose>																		<xsl:when test=". instance of element() or . instance of document-node()">																			<xsl:apply-templates/>																		</xsl:when>																		<xsl:otherwise>																			<xsl:value-of select="."/>																		</xsl:otherwise>																	</xsl:choose>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_1/($s0_c27_show)">															<td style="width:{$s0_c27_width}; " class="td_h_h">																<xsl:for-each select="$s0_c27_h_value">																	<xsl:choose>																		<xsl:when test=". instance of element() or . instance of document-node()">																			<xsl:apply-templates/>																		</xsl:when>																		<xsl:otherwise>																			<xsl:value-of select="."/>																		</xsl:otherwise>																	</xsl:choose>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_1/($s0_c28_show)">															<td style="width:{$s0_c28_width}; " class="td_h_h">																<xsl:for-each select="$s0_c28_h_value">																	<xsl:choose>																		<xsl:when test=". instance of element() or . instance of document-node()">																			<xsl:apply-templates/>																		</xsl:when>																		<xsl:otherwise>																			<xsl:value-of select="."/>																		</xsl:otherwise>																	</xsl:choose>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_1/($s0_c29_show)">															<td style="width:{$s0_c29_width}; " class="td_h_h">																<xsl:for-each select="$s0_c29_h_value">																	<xsl:choose>																		<xsl:when test=". instance of element() or . instance of document-node()">																			<xsl:apply-templates/>																		</xsl:when>																		<xsl:otherwise>																			<xsl:value-of select="."/>																		</xsl:otherwise>																	</xsl:choose>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_1/($s0_c30_show)">															<td style="width:{$s0_c30_width}; " class="td_h_h">																<xsl:for-each select="$s0_c30_h_value">																	<xsl:choose>																		<xsl:when test=". instance of element() or . instance of document-node()">																			<xsl:apply-templates/>																		</xsl:when>																		<xsl:otherwise>																			<xsl:value-of select="."/>																		</xsl:otherwise>																	</xsl:choose>																</xsl:for-each>															</td>														</xsl:if>													</tr>													<tr>														<xsl:if test="$altova:CurrContextGrid_1/($s0_c1_show)">															<td style="width:{$s0_c1_width}; " class="td">																<xsl:for-each select="n1:values">																	<xsl:for-each select="n1:v1">																		<xsl:apply-templates/>																	</xsl:for-each>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_1/($s0_c2_show)">															<td style="width:{$s0_c2_width}; " class="td">																<xsl:for-each select="n1:values">																	<xsl:for-each select="n1:v2">																		<xsl:apply-templates/>																	</xsl:for-each>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_1/($s0_c3_show)">															<td style="width:{$s0_c3_width}; " class="td">																<xsl:for-each select="n1:values">																	<xsl:for-each select="n1:v3">																		<xsl:apply-templates/>																	</xsl:for-each>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_1/($s0_c4_show)">															<td style="width:{$s0_c4_width}; " class="td">																<xsl:for-each select="n1:values">																	<xsl:for-each select="n1:v4">																		<xsl:apply-templates/>																	</xsl:for-each>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_1/($s0_c5_show)">															<td style="width:{$s0_c5_width}; " class="td">																<xsl:for-each select="n1:values">																	<xsl:for-each select="n1:v5">																		<xsl:apply-templates/>																	</xsl:for-each>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_1/($s0_c6_show)">															<td style="width:{$s0_c6_width}; " class="td">																<xsl:for-each select="n1:values">																	<xsl:for-each select="n1:v6">																		<xsl:apply-templates/>																	</xsl:for-each>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_1/($s0_c7_show)">															<td style="width:{$s0_c7_width}; " class="td">																<xsl:for-each select="n1:values">																	<xsl:for-each select="n1:v7">																		<xsl:apply-templates/>																	</xsl:for-each>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_1/($s0_c8_show)">															<td style="width:{$s0_c8_width}; " class="td">																<xsl:for-each select="n1:values">																	<xsl:for-each select="n1:v8">																		<xsl:apply-templates/>																	</xsl:for-each>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_1/($s0_c9_show)">															<td style="width:{$s0_c9_width}; " class="td">																<xsl:for-each select="n1:values">																	<xsl:for-each select="n1:v9">																		<xsl:apply-templates/>																	</xsl:for-each>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_1/($s0_c10_show)">															<td style="width:{$s0_c10_width}; " class="td">																<xsl:for-each select="n1:values">																	<xsl:for-each select="n1:v10">																		<xsl:apply-templates/>																	</xsl:for-each>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_1/($s0_c11_show)">															<td style="width:{$s0_c11_width}; " class="td">																<xsl:for-each select="n1:values">																	<xsl:for-each select="n1:v11">																		<xsl:apply-templates/>																	</xsl:for-each>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_1/($s0_c12_show)">															<td style="width:{$s0_c12_width}; " class="td">																<xsl:for-each select="n1:values">																	<xsl:for-each select="n1:v12">																		<xsl:apply-templates/>																	</xsl:for-each>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_1/($s0_c13_show)">															<td style="width:{$s0_c13_width}; " class="td">																<xsl:for-each select="n1:values">																	<xsl:for-each select="n1:v13">																		<xsl:apply-templates/>																	</xsl:for-each>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_1/($s0_c14_show)">															<td style="width:{$s0_c14_width}; " class="td">																<xsl:for-each select="n1:values">																	<xsl:for-each select="n1:v14">																		<xsl:apply-templates/>																	</xsl:for-each>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_1/($s0_c15_show)">															<td style="width:{$s0_c15_width}; " class="td">																<xsl:for-each select="n1:values">																	<xsl:for-each select="n1:v15">																		<xsl:apply-templates/>																	</xsl:for-each>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_1/($s0_c16_show)">															<td style="width:{$s0_c16_width}; " class="td">																<xsl:for-each select="n1:values">																	<xsl:for-each select="n1:v16">																		<xsl:apply-templates/>																	</xsl:for-each>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_1/($s0_c17_show)">															<td style="width:{$s0_c17_width}; " class="td">																<xsl:for-each select="n1:values">																	<xsl:for-each select="n1:v17">																		<xsl:apply-templates/>																	</xsl:for-each>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_1/($s0_c18_show)">															<td style="width:{$s0_c18_width}; " class="td">																<xsl:for-each select="n1:values">																	<xsl:for-each select="n1:v18">																		<xsl:apply-templates/>																	</xsl:for-each>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_1/($s0_c19_show)">															<td style="width:{$s0_c19_width}; " class="td">																<xsl:for-each select="n1:values">																	<xsl:for-each select="n1:v19">																		<xsl:apply-templates/>																	</xsl:for-each>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_1/($s0_c20_show)">															<td style="width:{$s0_c20_width}; " class="td">																<xsl:for-each select="n1:values">																	<xsl:for-each select="n1:v20">																		<xsl:apply-templates/>																	</xsl:for-each>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_1/($s0_c21_show)">															<td style="width:{$s0_c21_width}; " class="td">																<xsl:for-each select="n1:values">																	<xsl:for-each select="n1:v21">																		<xsl:apply-templates/>																	</xsl:for-each>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_1/($s0_c22_show)">															<td style="width:{$s0_c22_width}; " class="td">																<xsl:for-each select="n1:values">																	<xsl:for-each select="n1:v22">																		<xsl:apply-templates/>																	</xsl:for-each>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_1/($s0_c23_show)">															<td style="width:{$s0_c23_width}; " class="td">																<xsl:for-each select="n1:values">																	<xsl:for-each select="n1:v23">																		<xsl:apply-templates/>																	</xsl:for-each>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_1/($s0_c24_show)">															<td style="width:{$s0_c24_width}; " class="td">																<xsl:for-each select="n1:values">																	<xsl:for-each select="n1:v24">																		<xsl:apply-templates/>																	</xsl:for-each>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_1/($s0_c25_show)">															<td style="width:{$s0_c25_width}; " class="td">																<xsl:for-each select="n1:values">																	<xsl:for-each select="n1:v25">																		<xsl:apply-templates/>																	</xsl:for-each>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_1/($s0_c26_show)">															<td style="width:{$s0_c26_width}; " class="td">																<xsl:for-each select="n1:values">																	<xsl:for-each select="n1:v26">																		<xsl:apply-templates/>																	</xsl:for-each>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_1/($s0_c27_show)">															<td style="width:{$s0_c27_width}; " class="td">																<xsl:for-each select="n1:values">																	<xsl:for-each select="n1:v27">																		<xsl:apply-templates/>																	</xsl:for-each>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_1/($s0_c28_show)">															<td style="width:{$s0_c28_width}; " class="td">																<xsl:for-each select="n1:values">																	<xsl:for-each select="n1:v28">																		<xsl:apply-templates/>																	</xsl:for-each>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_1/($s0_c29_show)">															<td style="width:{$s0_c29_width}; " class="td">																<xsl:for-each select="n1:values">																	<xsl:for-each select="n1:v29">																		<xsl:apply-templates/>																	</xsl:for-each>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_1/($s0_c30_show)">															<td style="width:{$s0_c30_width}; " class="td">																<xsl:for-each select="n1:values">																	<xsl:for-each select="n1:v30">																		<xsl:apply-templates/>																	</xsl:for-each>																</xsl:for-each>															</td>														</xsl:if>													</tr>												</tbody>											</table>										</xsl:variable>										<xsl:variable name="altova:col-count" select="sum( for $altova:cell in $altova:table/table/(thead | tbody | tfoot)[ 1 ]/tr[ 1 ]/(th | td) return altova:col-span( $altova:cell ) )"/>										<xsl:variable name="altova:generate-cols" as="xs:boolean*" select="for $altova:pos in 1 to $altova:col-count return true()"/>										<xsl:apply-templates select="$altova:table" mode="altova:generate-table">											<xsl:with-param name="altova:generate-cols" select="$altova:generate-cols"/>										</xsl:apply-templates>										<xsl:call-template name="L1_template">											<xsl:with-param name="sectionData" select="n1:section1"/>											<xsl:with-param name="sectionDescription" select="$XML/n1:SearchResults/n1:sections/n1:section1"/>										</xsl:call-template>										<xsl:call-template name="L1_template">											<xsl:with-param name="sectionData" select="n1:section2"/>											<xsl:with-param name="sectionDescription" select="$XML/n1:SearchResults/n1:sections/n1:section2"/>										</xsl:call-template>										<xsl:call-template name="L1_template">											<xsl:with-param name="sectionData" select="n1:section3"/>											<xsl:with-param name="sectionDescription" select="$XML/n1:SearchResults/n1:sections/n1:section3"/>										</xsl:call-template>										<xsl:call-template name="L1_template">											<xsl:with-param name="sectionData" select="n1:section4"/>											<xsl:with-param name="sectionDescription" select="$XML/n1:SearchResults/n1:sections/n1:section4"/>										</xsl:call-template>										<xsl:call-template name="L1_template">											<xsl:with-param name="sectionData" select="n1:section5"/>											<xsl:with-param name="sectionDescription" select="$XML/n1:SearchResults/n1:sections/n1:section5"/>										</xsl:call-template>										<xsl:call-template name="L1_template">											<xsl:with-param name="sectionData" select="n1:section6"/>											<xsl:with-param name="sectionDescription" select="$XML/n1:SearchResults/n1:sections/n1:section6"/>										</xsl:call-template>										<xsl:call-template name="L1_template">											<xsl:with-param name="sectionData" select="n1:section7"/>											<xsl:with-param name="sectionDescription" select="$XML/n1:SearchResults/n1:sections/n1:section7"/>										</xsl:call-template>										<xsl:call-template name="L1_template">											<xsl:with-param name="sectionData" select="n1:section8"/>											<xsl:with-param name="sectionDescription" select="$XML/n1:SearchResults/n1:sections/n1:section8"/>										</xsl:call-template>										<xsl:call-template name="L1_template">											<xsl:with-param name="sectionData" select="n1:section9"/>											<xsl:with-param name="sectionDescription" select="$XML/n1:SearchResults/n1:sections/n1:section9"/>										</xsl:call-template>										<xsl:call-template name="L1_template">											<xsl:with-param name="sectionData" select="n1:section10"/>											<xsl:with-param name="sectionDescription" select="$XML/n1:SearchResults/n1:sections/n1:section10"/>										</xsl:call-template>										<xsl:call-template name="L1_template">											<xsl:with-param name="sectionData" select="n1:section11"/>											<xsl:with-param name="sectionDescription" select="$XML/n1:SearchResults/n1:sections/n1:section11"/>										</xsl:call-template>										<xsl:call-template name="L1_template">											<xsl:with-param name="sectionData" select="n1:section12"/>											<xsl:with-param name="sectionDescription" select="$XML/n1:SearchResults/n1:sections/n1:section12"/>										</xsl:call-template>										<xsl:call-template name="L1_template">											<xsl:with-param name="sectionData" select="n1:section13"/>											<xsl:with-param name="sectionDescription" select="$XML/n1:SearchResults/n1:sections/n1:section13"/>										</xsl:call-template>										<xsl:call-template name="L1_template">											<xsl:with-param name="sectionData" select="n1:section14"/>											<xsl:with-param name="sectionDescription" select="$XML/n1:SearchResults/n1:sections/n1:section14"/>										</xsl:call-template>										<xsl:call-template name="L1_template">											<xsl:with-param name="sectionData" select="n1:section15"/>											<xsl:with-param name="sectionDescription" select="$XML/n1:SearchResults/n1:sections/n1:section15"/>										</xsl:call-template>										<xsl:call-template name="L1_template">											<xsl:with-param name="sectionData" select="n1:section16"/>											<xsl:with-param name="sectionDescription" select="$XML/n1:SearchResults/n1:sections/n1:section16"/>										</xsl:call-template>										<xsl:call-template name="L1_template">											<xsl:with-param name="sectionData" select="n1:section17"/>											<xsl:with-param name="sectionDescription" select="$XML/n1:SearchResults/n1:sections/n1:section17"/>										</xsl:call-template>										<xsl:call-template name="L1_template">											<xsl:with-param name="sectionData" select="n1:section18"/>											<xsl:with-param name="sectionDescription" select="$XML/n1:SearchResults/n1:sections/n1:section18"/>										</xsl:call-template>										<xsl:call-template name="L1_template">											<xsl:with-param name="sectionData" select="n1:section19"/>											<xsl:with-param name="sectionDescription" select="$XML/n1:SearchResults/n1:sections/n1:section19"/>										</xsl:call-template>										<xsl:call-template name="L1_template">											<xsl:with-param name="sectionData" select="n1:section20"/>											<xsl:with-param name="sectionDescription" select="$XML/n1:SearchResults/n1:sections/n1:section20"/>										</xsl:call-template>										<xsl:call-template name="L1_template">											<xsl:with-param name="sectionData" select="n1:section21"/>											<xsl:with-param name="sectionDescription" select="$XML/n1:SearchResults/n1:sections/n1:section21"/>										</xsl:call-template>										<xsl:call-template name="L1_template">											<xsl:with-param name="sectionData" select="n1:section22"/>											<xsl:with-param name="sectionDescription" select="$XML/n1:SearchResults/n1:sections/n1:section22"/>										</xsl:call-template>										<xsl:call-template name="L1_template">											<xsl:with-param name="sectionData" select="n1:section23"/>											<xsl:with-param name="sectionDescription" select="$XML/n1:SearchResults/n1:sections/n1:section23"/>										</xsl:call-template>										<xsl:call-template name="L1_template">											<xsl:with-param name="sectionData" select="n1:section24"/>											<xsl:with-param name="sectionDescription" select="$XML/n1:SearchResults/n1:sections/n1:section24"/>										</xsl:call-template>										<xsl:call-template name="L1_template">											<xsl:with-param name="sectionData" select="n1:section25"/>											<xsl:with-param name="sectionDescription" select="$XML/n1:SearchResults/n1:sections/n1:section25"/>										</xsl:call-template>										<xsl:call-template name="L1_template">											<xsl:with-param name="sectionData" select="n1:section26"/>											<xsl:with-param name="sectionDescription" select="$XML/n1:SearchResults/n1:sections/n1:section26"/>										</xsl:call-template>										<xsl:call-template name="L1_template">											<xsl:with-param name="sectionData" select="n1:section27"/>											<xsl:with-param name="sectionDescription" select="$XML/n1:SearchResults/n1:sections/n1:section27"/>										</xsl:call-template>										<xsl:call-template name="L1_template">											<xsl:with-param name="sectionData" select="n1:section28"/>											<xsl:with-param name="sectionDescription" select="$XML/n1:SearchResults/n1:sections/n1:section28"/>										</xsl:call-template>										<xsl:call-template name="L1_template">											<xsl:with-param name="sectionData" select="n1:section29"/>											<xsl:with-param name="sectionDescription" select="$XML/n1:SearchResults/n1:sections/n1:section29"/>										</xsl:call-template>										<xsl:call-template name="L1_template">											<xsl:with-param name="sectionData" select="n1:section30"/>											<xsl:with-param name="sectionDescription" select="$XML/n1:SearchResults/n1:sections/n1:section30"/>										</xsl:call-template>									</xsl:for-each>								</xsl:when>								<xsl:otherwise>									<xsl:variable name="altova:table">										<table style="width:{../n1:sections/n1:section0/@tw != &apos;0%&apos;}; " class="table">											<xsl:variable name="altova:CurrContextGrid_2" select="."/>											<xsl:variable name="altova:ColumnData"/>											<tbody>												<tr>													<xsl:if test="$altova:CurrContextGrid_2/($s0_c1_show)">														<td style="width:{$s0_c1_width}; " class="td_h_h">															<xsl:for-each select="$s0_c1_h_value">																<xsl:choose>																	<xsl:when test=". instance of element() or . instance of document-node()">																		<xsl:apply-templates/>																	</xsl:when>																	<xsl:otherwise>																		<xsl:value-of select="."/>																	</xsl:otherwise>																</xsl:choose>															</xsl:for-each>														</td>													</xsl:if>													<xsl:if test="$altova:CurrContextGrid_2/($s0_c2_show)">														<td style="width:{$s0_c2_width}; " class="td_h_h">															<xsl:for-each select="$s0_c2_h_value">																<xsl:choose>																	<xsl:when test=". instance of element() or . instance of document-node()">																		<xsl:apply-templates/>																	</xsl:when>																	<xsl:otherwise>																		<xsl:value-of select="."/>																	</xsl:otherwise>																</xsl:choose>															</xsl:for-each>														</td>													</xsl:if>													<xsl:if test="$altova:CurrContextGrid_2/($s0_c3_show)">														<td style="width:{$s0_c3_width}; " class="td_h_h">															<xsl:for-each select="$s0_c3_h_value">																<xsl:choose>																	<xsl:when test=". instance of element() or . instance of document-node()">																		<xsl:apply-templates/>																	</xsl:when>																	<xsl:otherwise>																		<xsl:value-of select="."/>																	</xsl:otherwise>																</xsl:choose>															</xsl:for-each>														</td>													</xsl:if>													<xsl:if test="$altova:CurrContextGrid_2/($s0_c4_show)">														<td style="width:{$s0_c4_width}; " class="td_h_h">															<xsl:for-each select="$s0_c4_h_value">																<xsl:choose>																	<xsl:when test=". instance of element() or . instance of document-node()">																		<xsl:apply-templates/>																	</xsl:when>																	<xsl:otherwise>																		<xsl:value-of select="."/>																	</xsl:otherwise>																</xsl:choose>															</xsl:for-each>														</td>													</xsl:if>													<xsl:if test="$altova:CurrContextGrid_2/($s0_c5_show)">														<td style="width:{$s0_c5_width}; " class="td_h_h">															<xsl:for-each select="$s0_c5_h_value">																<xsl:choose>																	<xsl:when test=". instance of element() or . instance of document-node()">																		<xsl:apply-templates/>																	</xsl:when>																	<xsl:otherwise>																		<xsl:value-of select="."/>																	</xsl:otherwise>																</xsl:choose>															</xsl:for-each>														</td>													</xsl:if>													<xsl:if test="$altova:CurrContextGrid_2/($s0_c6_show)">														<td style="width:{$s0_c6_width}; " class="td_h_h">															<xsl:for-each select="$s0_c6_h_value">																<xsl:choose>																	<xsl:when test=". instance of element() or . instance of document-node()">																		<xsl:apply-templates/>																	</xsl:when>																	<xsl:otherwise>																		<xsl:value-of select="."/>																	</xsl:otherwise>																</xsl:choose>															</xsl:for-each>														</td>													</xsl:if>													<xsl:if test="$altova:CurrContextGrid_2/($s0_c7_show)">														<td style="width:{$s0_c7_width}; " class="td_h_h">															<xsl:for-each select="$s0_c7_h_value">																<xsl:choose>																	<xsl:when test=". instance of element() or . instance of document-node()">																		<xsl:apply-templates/>																	</xsl:when>																	<xsl:otherwise>																		<xsl:value-of select="."/>																	</xsl:otherwise>																</xsl:choose>															</xsl:for-each>														</td>													</xsl:if>													<xsl:if test="$altova:CurrContextGrid_2/($s0_c8_show)">														<td style="width:{$s0_c8_width}; " class="td_h_h">															<xsl:for-each select="$s0_c8_h_value">																<xsl:choose>																	<xsl:when test=". instance of element() or . instance of document-node()">																		<xsl:apply-templates/>																	</xsl:when>																	<xsl:otherwise>																		<xsl:value-of select="."/>																	</xsl:otherwise>																</xsl:choose>															</xsl:for-each>														</td>													</xsl:if>													<xsl:if test="$altova:CurrContextGrid_2/($s0_c9_show)">														<td style="width:{$s0_c9_width}; " class="td_h_h">															<xsl:for-each select="$s0_c9_h_value">																<xsl:choose>																	<xsl:when test=". instance of element() or . instance of document-node()">																		<xsl:apply-templates/>																	</xsl:when>																	<xsl:otherwise>																		<xsl:value-of select="."/>																	</xsl:otherwise>																</xsl:choose>															</xsl:for-each>														</td>													</xsl:if>													<xsl:if test="$altova:CurrContextGrid_2/($s0_c10_show)">														<td style="width:{$s0_c10_width}; " class="td_h_h">															<xsl:for-each select="$s0_c10_h_value">																<xsl:choose>																	<xsl:when test=". instance of element() or . instance of document-node()">																		<xsl:apply-templates/>																	</xsl:when>																	<xsl:otherwise>																		<xsl:value-of select="."/>																	</xsl:otherwise>																</xsl:choose>															</xsl:for-each>														</td>													</xsl:if>													<xsl:if test="$altova:CurrContextGrid_2/($s0_c11_show)">														<td style="width:{$s0_c11_width}; " class="td_h_h">															<xsl:for-each select="$s0_c11_h_value">																<xsl:choose>																	<xsl:when test=". instance of element() or . instance of document-node()">																		<xsl:apply-templates/>																	</xsl:when>																	<xsl:otherwise>																		<xsl:value-of select="."/>																	</xsl:otherwise>																</xsl:choose>															</xsl:for-each>														</td>													</xsl:if>													<xsl:if test="$altova:CurrContextGrid_2/($s0_c12_show)">														<td style="width:{$s0_c12_width}; " class="td_h_h">															<xsl:for-each select="$s0_c12_h_value">																<xsl:choose>																	<xsl:when test=". instance of element() or . instance of document-node()">																		<xsl:apply-templates/>																	</xsl:when>																	<xsl:otherwise>																		<xsl:value-of select="."/>																	</xsl:otherwise>																</xsl:choose>															</xsl:for-each>														</td>													</xsl:if>													<xsl:if test="$altova:CurrContextGrid_2/($s0_c13_show)">														<td style="width:{$s0_c13_width}; " class="td_h_h">															<xsl:for-each select="$s0_c13_h_value">																<xsl:choose>																	<xsl:when test=". instance of element() or . instance of document-node()">																		<xsl:apply-templates/>																	</xsl:when>																	<xsl:otherwise>																		<xsl:value-of select="."/>																	</xsl:otherwise>																</xsl:choose>															</xsl:for-each>														</td>													</xsl:if>													<xsl:if test="$altova:CurrContextGrid_2/($s0_c14_show)">														<td style="width:{$s0_c14_width}; " class="td_h_h">															<xsl:for-each select="$s0_c14_h_value">																<xsl:choose>																	<xsl:when test=". instance of element() or . instance of document-node()">																		<xsl:apply-templates/>																	</xsl:when>																	<xsl:otherwise>																		<xsl:value-of select="."/>																	</xsl:otherwise>																</xsl:choose>															</xsl:for-each>														</td>													</xsl:if>													<xsl:if test="$altova:CurrContextGrid_2/($s0_c15_show)">														<td style="width:{$s0_c15_width}; " class="td_h_h">															<xsl:for-each select="$s0_c15_h_value">																<xsl:choose>																	<xsl:when test=". instance of element() or . instance of document-node()">																		<xsl:apply-templates/>																	</xsl:when>																	<xsl:otherwise>																		<xsl:value-of select="."/>																	</xsl:otherwise>																</xsl:choose>															</xsl:for-each>														</td>													</xsl:if>													<xsl:if test="$altova:CurrContextGrid_2/($s0_c16_show)">														<td style="width:{$s0_c16_width}; " class="td_h_h">															<xsl:for-each select="$s0_c16_h_value">																<xsl:choose>																	<xsl:when test=". instance of element() or . instance of document-node()">																		<xsl:apply-templates/>																	</xsl:when>																	<xsl:otherwise>																		<xsl:value-of select="."/>																	</xsl:otherwise>																</xsl:choose>															</xsl:for-each>														</td>													</xsl:if>													<xsl:if test="$altova:CurrContextGrid_2/($s0_c17_show)">														<td style="width:{$s0_c17_width}; " class="td_h_h">															<xsl:for-each select="$s0_c17_h_value">																<xsl:choose>																	<xsl:when test=". instance of element() or . instance of document-node()">																		<xsl:apply-templates/>																	</xsl:when>																	<xsl:otherwise>																		<xsl:value-of select="."/>																	</xsl:otherwise>																</xsl:choose>															</xsl:for-each>														</td>													</xsl:if>													<xsl:if test="$altova:CurrContextGrid_2/($s0_c18_show)">														<td style="width:{$s0_c18_width}; " class="td_h_h">															<xsl:for-each select="$s0_c18_h_value">																<xsl:choose>																	<xsl:when test=". instance of element() or . instance of document-node()">																		<xsl:apply-templates/>																	</xsl:when>																	<xsl:otherwise>																		<xsl:value-of select="."/>																	</xsl:otherwise>																</xsl:choose>															</xsl:for-each>														</td>													</xsl:if>													<xsl:if test="$altova:CurrContextGrid_2/($s0_c19_show)">														<td style="width:{$s0_c19_width}; " class="td_h_h">															<xsl:for-each select="$s0_c19_h_value">																<xsl:choose>																	<xsl:when test=". instance of element() or . instance of document-node()">																		<xsl:apply-templates/>																	</xsl:when>																	<xsl:otherwise>																		<xsl:value-of select="."/>																	</xsl:otherwise>																</xsl:choose>															</xsl:for-each>														</td>													</xsl:if>													<xsl:if test="$altova:CurrContextGrid_2/($s0_c20_show)">														<td style="width:{$s0_c20_width}; " class="td_h_h">															<xsl:for-each select="$s0_c20_h_value">																<xsl:choose>																	<xsl:when test=". instance of element() or . instance of document-node()">																		<xsl:apply-templates/>																	</xsl:when>																	<xsl:otherwise>																		<xsl:value-of select="."/>																	</xsl:otherwise>																</xsl:choose>															</xsl:for-each>														</td>													</xsl:if>													<xsl:if test="$altova:CurrContextGrid_2/($s0_c21_show)">														<td style="width:{$s0_c21_width}; " class="td_h_h">															<xsl:for-each select="$s0_c21_h_value">																<xsl:choose>																	<xsl:when test=". instance of element() or . instance of document-node()">																		<xsl:apply-templates/>																	</xsl:when>																	<xsl:otherwise>																		<xsl:value-of select="."/>																	</xsl:otherwise>																</xsl:choose>															</xsl:for-each>														</td>													</xsl:if>													<xsl:if test="$altova:CurrContextGrid_2/($s0_c22_show)">														<td style="width:{$s0_c22_width}; " class="td_h_h">															<xsl:for-each select="$s0_c22_h_value">																<xsl:choose>																	<xsl:when test=". instance of element() or . instance of document-node()">																		<xsl:apply-templates/>																	</xsl:when>																	<xsl:otherwise>																		<xsl:value-of select="."/>																	</xsl:otherwise>																</xsl:choose>															</xsl:for-each>														</td>													</xsl:if>													<xsl:if test="$altova:CurrContextGrid_2/($s0_c23_show)">														<td style="width:{$s0_c23_width}; " class="td_h_h">															<xsl:for-each select="$s0_c23_h_value">																<xsl:choose>																	<xsl:when test=". instance of element() or . instance of document-node()">																		<xsl:apply-templates/>																	</xsl:when>																	<xsl:otherwise>																		<xsl:value-of select="."/>																	</xsl:otherwise>																</xsl:choose>															</xsl:for-each>														</td>													</xsl:if>													<xsl:if test="$altova:CurrContextGrid_2/($s0_c24_show)">														<td style="width:{$s0_c24_width}; " class="td_h_h">															<xsl:for-each select="$s0_c25_h_value">																<xsl:choose>																	<xsl:when test=". instance of element() or . instance of document-node()">																		<xsl:apply-templates/>																	</xsl:when>																	<xsl:otherwise>																		<xsl:value-of select="."/>																	</xsl:otherwise>																</xsl:choose>															</xsl:for-each>														</td>													</xsl:if>													<xsl:if test="$altova:CurrContextGrid_2/($s0_c25_show)">														<td style="width:{$s0_c25_width}; " class="td_h_h">															<xsl:for-each select="$s0_c25_h_value">																<xsl:choose>																	<xsl:when test=". instance of element() or . instance of document-node()">																		<xsl:apply-templates/>																	</xsl:when>																	<xsl:otherwise>																		<xsl:value-of select="."/>																	</xsl:otherwise>																</xsl:choose>															</xsl:for-each>														</td>													</xsl:if>													<xsl:if test="$altova:CurrContextGrid_2/($s0_c26_show)">														<td style="width:{$s0_c26_width}; " class="td_h_h">															<xsl:for-each select="$s0_c26_h_value">																<xsl:choose>																	<xsl:when test=". instance of element() or . instance of document-node()">																		<xsl:apply-templates/>																	</xsl:when>																	<xsl:otherwise>																		<xsl:value-of select="."/>																	</xsl:otherwise>																</xsl:choose>															</xsl:for-each>														</td>													</xsl:if>													<xsl:if test="$altova:CurrContextGrid_2/($s0_c27_show)">														<td style="width:{$s0_c27_width}; " class="td_h_h">															<xsl:for-each select="$s0_c27_h_value">																<xsl:choose>																	<xsl:when test=". instance of element() or . instance of document-node()">																		<xsl:apply-templates/>																	</xsl:when>																	<xsl:otherwise>																		<xsl:value-of select="."/>																	</xsl:otherwise>																</xsl:choose>															</xsl:for-each>														</td>													</xsl:if>													<xsl:if test="$altova:CurrContextGrid_2/($s0_c28_show)">														<td style="width:{$s0_c28_width}; " class="td_h_h">															<xsl:for-each select="$s0_c28_h_value">																<xsl:choose>																	<xsl:when test=". instance of element() or . instance of document-node()">																		<xsl:apply-templates/>																	</xsl:when>																	<xsl:otherwise>																		<xsl:value-of select="."/>																	</xsl:otherwise>																</xsl:choose>															</xsl:for-each>														</td>													</xsl:if>													<xsl:if test="$altova:CurrContextGrid_2/($s0_c29_show)">														<td style="width:{$s0_c29_width}; " class="td_h_h">															<xsl:for-each select="$s0_c29_h_value">																<xsl:choose>																	<xsl:when test=". instance of element() or . instance of document-node()">																		<xsl:apply-templates/>																	</xsl:when>																	<xsl:otherwise>																		<xsl:value-of select="."/>																	</xsl:otherwise>																</xsl:choose>															</xsl:for-each>														</td>													</xsl:if>													<xsl:if test="$altova:CurrContextGrid_2/($s0_c30_show)">														<td style="width:{$s0_c30_width}; " class="td_h_h">															<xsl:for-each select="$s0_c30_h_value">																<xsl:choose>																	<xsl:when test=". instance of element() or . instance of document-node()">																		<xsl:apply-templates/>																	</xsl:when>																	<xsl:otherwise>																		<xsl:value-of select="."/>																	</xsl:otherwise>																</xsl:choose>															</xsl:for-each>														</td>													</xsl:if>												</tr>												<xsl:for-each select="n1:object">													<tr>														<xsl:if test="$altova:CurrContextGrid_2/($s0_c1_show)">															<td class="td">																<a>																	<xsl:attribute name="name">																		<xsl:value-of select="n1:values/n1:v0"/>																	</xsl:attribute>																</a>																<xsl:for-each select="n1:values">																	<xsl:for-each select="n1:v1">																		<xsl:apply-templates/>																	</xsl:for-each>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_2/($s0_c2_show)">															<td class="td">																<xsl:for-each select="n1:values">																	<xsl:for-each select="n1:v2">																		<xsl:apply-templates/>																	</xsl:for-each>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_2/($s0_c3_show)">															<td class="td">																<xsl:for-each select="n1:values">																	<xsl:for-each select="n1:v3">																		<xsl:apply-templates/>																	</xsl:for-each>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_2/($s0_c4_show)">															<td class="td">																<xsl:for-each select="n1:values">																	<xsl:for-each select="n1:v4">																		<xsl:apply-templates/>																	</xsl:for-each>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_2/($s0_c5_show)">															<td class="td">																<xsl:for-each select="n1:values">																	<xsl:for-each select="n1:v5">																		<xsl:apply-templates/>																	</xsl:for-each>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_2/($s0_c6_show)">															<td class="td">																<xsl:for-each select="n1:values">																	<xsl:for-each select="n1:v6">																		<xsl:apply-templates/>																	</xsl:for-each>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_2/($s0_c7_show)">															<td class="td">																<xsl:for-each select="n1:values">																	<xsl:for-each select="n1:v7">																		<xsl:apply-templates/>																	</xsl:for-each>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_2/($s0_c8_show)">															<td class="td">																<xsl:for-each select="n1:values">																	<xsl:for-each select="n1:v8">																		<xsl:apply-templates/>																	</xsl:for-each>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_2/($s0_c9_show)">															<td class="td">																<xsl:for-each select="n1:values">																	<xsl:for-each select="n1:v9">																		<xsl:apply-templates/>																	</xsl:for-each>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_2/($s0_c10_show)">															<td class="td">																<xsl:for-each select="n1:values">																	<xsl:for-each select="n1:v10">																		<xsl:apply-templates/>																	</xsl:for-each>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_2/($s0_c11_show)">															<td class="td">																<xsl:for-each select="n1:values">																	<xsl:for-each select="n1:v11">																		<xsl:apply-templates/>																	</xsl:for-each>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_2/($s0_c12_show)">															<td class="td">																<xsl:for-each select="n1:values">																	<xsl:for-each select="n1:v12">																		<xsl:apply-templates/>																	</xsl:for-each>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_2/($s0_c13_show)">															<td class="td">																<xsl:for-each select="n1:values">																	<xsl:for-each select="n1:v13">																		<xsl:apply-templates/>																	</xsl:for-each>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_2/($s0_c14_show)">															<td class="td">																<xsl:for-each select="n1:values">																	<xsl:for-each select="n1:v14">																		<xsl:apply-templates/>																	</xsl:for-each>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_2/($s0_c15_show)">															<td class="td">																<xsl:for-each select="n1:values">																	<xsl:for-each select="n1:v15">																		<xsl:apply-templates/>																	</xsl:for-each>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_2/($s0_c16_show)">															<td class="td">																<xsl:for-each select="n1:values">																	<xsl:for-each select="n1:v16">																		<xsl:apply-templates/>																	</xsl:for-each>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_2/($s0_c17_show)">															<td class="td">																<xsl:for-each select="n1:values">																	<xsl:for-each select="n1:v17">																		<xsl:apply-templates/>																	</xsl:for-each>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_2/($s0_c18_show)">															<td class="td">																<xsl:for-each select="n1:values">																	<xsl:for-each select="n1:v18">																		<xsl:apply-templates/>																	</xsl:for-each>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_2/($s0_c19_show)">															<td class="td">																<xsl:for-each select="n1:values">																	<xsl:for-each select="n1:v19">																		<xsl:apply-templates/>																	</xsl:for-each>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_2/($s0_c20_show)">															<td class="td">																<xsl:for-each select="n1:values">																	<xsl:for-each select="n1:v20">																		<xsl:apply-templates/>																	</xsl:for-each>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_2/($s0_c21_show)">															<td class="td">																<xsl:for-each select="n1:values">																	<xsl:for-each select="n1:v21">																		<xsl:apply-templates/>																	</xsl:for-each>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_2/($s0_c22_show)">															<td class="td">																<xsl:for-each select="n1:values">																	<xsl:for-each select="n1:v22">																		<xsl:apply-templates/>																	</xsl:for-each>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_2/($s0_c23_show)">															<td class="td">																<xsl:for-each select="n1:values">																	<xsl:for-each select="n1:v23">																		<xsl:apply-templates/>																	</xsl:for-each>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_2/($s0_c24_show)">															<td class="td">																<xsl:for-each select="n1:values">																	<xsl:for-each select="n1:v24">																		<xsl:apply-templates/>																	</xsl:for-each>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_2/($s0_c25_show)">															<td class="td">																<xsl:for-each select="n1:values">																	<xsl:for-each select="n1:v25">																		<xsl:apply-templates/>																	</xsl:for-each>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_2/($s0_c26_show)">															<td class="td">																<xsl:for-each select="n1:values">																	<xsl:for-each select="n1:v26">																		<xsl:apply-templates/>																	</xsl:for-each>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_2/($s0_c27_show)">															<td class="td">																<xsl:for-each select="n1:values">																	<xsl:for-each select="n1:v27">																		<xsl:apply-templates/>																	</xsl:for-each>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_2/($s0_c28_show)">															<td class="td">																<xsl:for-each select="n1:values">																	<xsl:for-each select="n1:v28">																		<xsl:apply-templates/>																	</xsl:for-each>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_2/($s0_c29_show)">															<td class="td">																<xsl:for-each select="n1:values">																	<xsl:for-each select="n1:v29">																		<xsl:apply-templates/>																	</xsl:for-each>																</xsl:for-each>															</td>														</xsl:if>														<xsl:if test="$altova:CurrContextGrid_2/($s0_c30_show)">															<td class="td">																<xsl:for-each select="n1:values">																	<xsl:for-each select="n1:v30">																		<xsl:apply-templates/>																	</xsl:for-each>																</xsl:for-each>															</td>														</xsl:if>													</tr>												</xsl:for-each>											</tbody>										</table>									</xsl:variable>									<xsl:variable name="altova:col-count" select="sum( for $altova:cell in $altova:table/table/(thead | tbody | tfoot)[ 1 ]/tr[ 1 ]/(th | td) return altova:col-span( $altova:cell ) )"/>									<xsl:variable name="altova:generate-cols" as="xs:boolean*" select="for $altova:pos in 1 to $altova:col-count return true()"/>									<xsl:apply-templates select="$altova:table" mode="altova:generate-table">										<xsl:with-param name="altova:generate-cols" select="$altova:generate-cols"/>									</xsl:apply-templates>								</xsl:otherwise>							</xsl:choose>						</xsl:for-each>					</xsl:for-each>				</xsl:for-each>			</body>		</html>	</xsl:template>	<xsl:template name="L1_template">		<xsl:param name="sectionData" select="n1:section1"/>		<xsl:param name="sectionDescription" select="$XML/n1:SearchResults/n1:sections/n1:section1"/>		<xsl:param name="c1_name" select="$sectionDescription/n1:c1/n1:customName"/>		<xsl:param name="c2_name" select="$sectionDescription/n1:c2/n1:customName"/>		<xsl:param name="c3_name" select="$sectionDescription/n1:c3/n1:customName"/>		<xsl:param name="c4_name" select="$sectionDescription/n1:c4/n1:customName"/>		<xsl:param name="c5_name" select="$sectionDescription/n1:c5/n1:customName"/>		<xsl:param name="c6_name" select="$sectionDescription/n1:c6/n1:customName"/>		<xsl:param name="c7_name" select="$sectionDescription/n1:c7/n1:customName"/>		<xsl:param name="c8_name" select="$sectionDescription/n1:c8/n1:customName"/>		<xsl:param name="c9_name" select="$sectionDescription/n1:c9/n1:customName"/>		<xsl:param name="c10_name" select="$sectionDescription/n1:c10/n1:customName"/>		<xsl:param name="c11_name" select="$sectionDescription/n1:c11/n1:customName"/>		<xsl:param name="c12_name" select="$sectionDescription/n1:c12/n1:customName"/>		<xsl:param name="c13_name" select="$sectionDescription/n1:c13/n1:customName"/>		<xsl:param name="c14_name" select="$sectionDescription/n1:c14/n1:customName"/>		<xsl:param name="c15_name" select="$sectionDescription/n1:c15/n1:customName"/>		<xsl:param name="c16_name" select="$sectionDescription/n1:c16/n1:customName"/>		<xsl:param name="c17_name" select="$sectionDescription/n1:c17/n1:customName"/>		<xsl:param name="c18_name" select="$sectionDescription/n1:c18/n1:customName"/>		<xsl:param name="c19_name" select="$sectionDescription/n1:c19/n1:customName"/>		<xsl:param name="c20_name" select="$sectionDescription/n1:c20/n1:customName"/>		<xsl:param name="c21_name" select="$sectionDescription/n1:c21/n1:customName"/>		<xsl:param name="c22_name" select="$sectionDescription/n1:c22/n1:customName"/>		<xsl:param name="c23_name" select="$sectionDescription/n1:c23/n1:customName"/>		<xsl:param name="c24_name" select="$sectionDescription/n1:c24/n1:customName"/>		<xsl:param name="c25_name" select="$sectionDescription/n1:c25/n1:customName"/>		<xsl:param name="c26_name" select="$sectionDescription/n1:c26/n1:customName"/>		<xsl:param name="c27_name" select="$sectionDescription/n1:c27/n1:customName"/>		<xsl:param name="c28_name" select="$sectionDescription/n1:c28/n1:customName"/>		<xsl:param name="c29_name" select="$sectionDescription/n1:c29/n1:customName"/>		<xsl:param name="c30_name" select="$sectionDescription/n1:c30/n1:customName"/>		<xsl:param name="c1_width" select="$sectionDescription/n1:c1/n1:width"/>		<xsl:param name="c2_width" select="$sectionDescription/n1:c2/n1:width"/>		<xsl:param name="c3_width" select="$sectionDescription/n1:c3/n1:width"/>		<xsl:param name="c4_width" select="$sectionDescription/n1:c4/n1:width"/>		<xsl:param name="c5_width" select="$sectionDescription/n1:c5/n1:width"/>		<xsl:param name="c6_width" select="$sectionDescription/n1:c6/n1:width"/>		<xsl:param name="c7_width" select="$sectionDescription/n1:c7/n1:width"/>		<xsl:param name="c8_width" select="$sectionDescription/n1:c8/n1:width"/>		<xsl:param name="c9_width" select="$sectionDescription/n1:c9/n1:width"/>		<xsl:param name="c10_width" select="$sectionDescription/n1:c10/n1:width"/>		<xsl:param name="c11_width" select="$sectionDescription/n1:c11/n1:width"/>		<xsl:param name="c12_width" select="$sectionDescription/n1:c12/n1:width"/>		<xsl:param name="c13_width" select="$sectionDescription/n1:c13/n1:width"/>		<xsl:param name="c14_width" select="$sectionDescription/n1:c14/n1:width"/>		<xsl:param name="c15_width" select="$sectionDescription/n1:c15/n1:width"/>		<xsl:param name="c16_width" select="$sectionDescription/n1:c16/n1:width"/>		<xsl:param name="c17_width" select="$sectionDescription/n1:c17/n1:width"/>		<xsl:param name="c18_width" select="$sectionDescription/n1:c18/n1:width"/>		<xsl:param name="c19_width" select="$sectionDescription/n1:c19/n1:width"/>		<xsl:param name="c20_width" select="$sectionDescription/n1:c20/n1:width"/>		<xsl:param name="c21_width" select="$sectionDescription/n1:c21/n1:width"/>		<xsl:param name="c22_width" select="$sectionDescription/n1:c22/n1:width"/>		<xsl:param name="c23_width" select="$sectionDescription/n1:c23/n1:width"/>		<xsl:param name="c24_width" select="$sectionDescription/n1:c24/n1:width"/>		<xsl:param name="c25_width" select="$sectionDescription/n1:c25/n1:width"/>		<xsl:param name="c26_width" select="$sectionDescription/n1:c26/n1:width"/>		<xsl:param name="c27_width" select="$sectionDescription/n1:c27/n1:width"/>		<xsl:param name="c28_width" select="$sectionDescription/n1:c28/n1:width"/>		<xsl:param name="c29_width" select="$sectionDescription/n1:c29/n1:width"/>		<xsl:param name="c30_width" select="$sectionDescription/n1:c30/n1:width"/>		<xsl:param name="c1_show" select="$sectionDescription/n1:c1/n1:show"/>		<xsl:param name="c2_show" select="$sectionDescription/n1:c2/n1:show"/>		<xsl:param name="c3_show" select="$sectionDescription/n1:c3/n1:show"/>		<xsl:param name="c4_show" select="$sectionDescription/n1:c4/n1:show"/>		<xsl:param name="c5_show" select="$sectionDescription/n1:c5/n1:show"/>		<xsl:param name="c6_show" select="$sectionDescription/n1:c6/n1:show"/>		<xsl:param name="c7_show" select="$sectionDescription/n1:c7/n1:show"/>		<xsl:param name="c8_show" select="$sectionDescription/n1:c8/n1:show"/>		<xsl:param name="c9_show" select="$sectionDescription/n1:c9/n1:show"/>		<xsl:param name="c10_show" select="$sectionDescription/n1:c10/n1:show"/>		<xsl:param name="c11_show" select="$sectionDescription/n1:c11/n1:show"/>		<xsl:param name="c12_show" select="$sectionDescription/n1:c12/n1:show"/>		<xsl:param name="c13_show" select="$sectionDescription/n1:c13/n1:show"/>		<xsl:param name="c14_show" select="$sectionDescription/n1:c14/n1:show"/>		<xsl:param name="c15_show" select="$sectionDescription/n1:c15/n1:show"/>		<xsl:param name="c16_show" select="$sectionDescription/n1:c16/n1:show"/>		<xsl:param name="c17_show" select="$sectionDescription/n1:c17/n1:show"/>		<xsl:param name="c18_show" select="$sectionDescription/n1:c18/n1:show"/>		<xsl:param name="c19_show" select="$sectionDescription/n1:c19/n1:show"/>		<xsl:param name="c20_show" select="$sectionDescription/n1:c20/n1:show"/>		<xsl:param name="c21_show" select="$sectionDescription/n1:c21/n1:show"/>		<xsl:param name="c22_show" select="$sectionDescription/n1:c22/n1:show"/>		<xsl:param name="c23_show" select="$sectionDescription/n1:c23/n1:show"/>		<xsl:param name="c24_show" select="$sectionDescription/n1:c24/n1:show"/>		<xsl:param name="c25_show" select="$sectionDescription/n1:c25/n1:show"/>		<xsl:param name="c26_show" select="$sectionDescription/n1:c26/n1:show"/>		<xsl:param name="c27_show" select="$sectionDescription/n1:c27/n1:show"/>		<xsl:param name="c28_show" select="$sectionDescription/n1:c28/n1:show"/>		<xsl:param name="c29_show" select="$sectionDescription/n1:c29/n1:show"/>		<xsl:param name="c30_show" select="$sectionDescription/n1:c30/n1:show"/>		<xsl:if test="$sectionData/n1:object/n1:values/*[text()]">			<br/>			<div style="margin-left:20px; ">				<xsl:for-each select="$sectionDescription">					<xsl:for-each select="@name">						<span style="font-style:italic; ">							<xsl:value-of select="string(.)"/>						</span>					</xsl:for-each>					<xsl:variable name="altova:table">						<table style="width:{$sectionDescription/@tw}; ">							<xsl:variable name="altova:CurrContextGrid_3" select="."/>							<xsl:variable name="altova:ColumnData"/>							<tbody>								<tr>									<xsl:if test="$altova:CurrContextGrid_3/($c1_show = &apos;true&apos;)">										<td style="width:{$c1_width}; " class="td_h_h_s1">											<xsl:for-each select="$c1_name">												<xsl:choose>													<xsl:when test=". instance of element() or . instance of document-node()">														<xsl:apply-templates/>													</xsl:when>													<xsl:otherwise>														<xsl:value-of select="."/>													</xsl:otherwise>												</xsl:choose>											</xsl:for-each>										</td>									</xsl:if>									<xsl:if test="$altova:CurrContextGrid_3/($c2_show = &apos;true&apos;)">										<td style="width:{$c2_width}; " class="td_h_h_s1">											<xsl:for-each select="$c2_name">												<xsl:choose>													<xsl:when test=". instance of element() or . instance of document-node()">														<xsl:apply-templates/>													</xsl:when>													<xsl:otherwise>														<xsl:value-of select="."/>													</xsl:otherwise>												</xsl:choose>											</xsl:for-each>										</td>									</xsl:if>									<xsl:if test="$altova:CurrContextGrid_3/($c3_show = &apos;true&apos;)">										<td style="width:{$c3_width}; " class="td_h_h_s1">											<xsl:for-each select="$c3_name">												<xsl:choose>													<xsl:when test=". instance of element() or . instance of document-node()">														<xsl:apply-templates/>													</xsl:when>													<xsl:otherwise>														<xsl:value-of select="."/>													</xsl:otherwise>												</xsl:choose>											</xsl:for-each>										</td>									</xsl:if>									<xsl:if test="$altova:CurrContextGrid_3/($c4_show = &apos;true&apos;)">										<td style="width:{$c4_width}; " class="td_h_h_s1">											<xsl:for-each select="$c4_name">												<xsl:choose>													<xsl:when test=". instance of element() or . instance of document-node()">														<xsl:apply-templates/>													</xsl:when>													<xsl:otherwise>														<xsl:value-of select="."/>													</xsl:otherwise>												</xsl:choose>											</xsl:for-each>										</td>									</xsl:if>									<xsl:if test="$altova:CurrContextGrid_3/($c5_show = &apos;true&apos;)">										<td style="width:{$c5_width}; " class="td_h_h_s1">											<xsl:for-each select="$c5_name">												<xsl:choose>													<xsl:when test=". instance of element() or . instance of document-node()">														<xsl:apply-templates/>													</xsl:when>													<xsl:otherwise>														<xsl:value-of select="."/>													</xsl:otherwise>												</xsl:choose>											</xsl:for-each>										</td>									</xsl:if>									<xsl:if test="$altova:CurrContextGrid_3/($c6_show = &apos;true&apos;)">										<td style="width:{$c6_width}; " class="td_h_h_s1">											<xsl:for-each select="$c6_name">												<xsl:choose>													<xsl:when test=". instance of element() or . instance of document-node()">														<xsl:apply-templates/>													</xsl:when>													<xsl:otherwise>														<xsl:value-of select="."/>													</xsl:otherwise>												</xsl:choose>											</xsl:for-each>										</td>									</xsl:if>									<xsl:if test="$altova:CurrContextGrid_3/($c7_show = &apos;true&apos;)">										<td style="width:{$c7_width}; " class="td_h_h_s1">											<xsl:for-each select="$c7_name">												<xsl:choose>													<xsl:when test=". instance of element() or . instance of document-node()">														<xsl:apply-templates/>													</xsl:when>													<xsl:otherwise>														<xsl:value-of select="."/>													</xsl:otherwise>												</xsl:choose>											</xsl:for-each>										</td>									</xsl:if>									<xsl:if test="$altova:CurrContextGrid_3/($c8_show = &apos;true&apos;)">										<td style="width:{$c8_width}; " class="td_h_h_s1">											<xsl:for-each select="$c8_name">												<xsl:choose>													<xsl:when test=". instance of element() or . instance of document-node()">														<xsl:apply-templates/>													</xsl:when>													<xsl:otherwise>														<xsl:value-of select="."/>													</xsl:otherwise>												</xsl:choose>											</xsl:for-each>										</td>									</xsl:if>									<xsl:if test="$altova:CurrContextGrid_3/($c9_show = &apos;true&apos;)">										<td style="width:{$c9_width}; " class="td_h_h_s1">											<xsl:for-each select="$c9_name">												<xsl:choose>													<xsl:when test=". instance of element() or . instance of document-node()">														<xsl:apply-templates/>													</xsl:when>													<xsl:otherwise>														<xsl:value-of select="."/>													</xsl:otherwise>												</xsl:choose>											</xsl:for-each>										</td>									</xsl:if>									<xsl:if test="$altova:CurrContextGrid_3/($c10_show = &apos;true&apos;)">										<td style="width:{$c10_width}; " class="td_h_h_s1">											<xsl:for-each select="$c10_name">												<xsl:choose>													<xsl:when test=". instance of element() or . instance of document-node()">														<xsl:apply-templates/>													</xsl:when>													<xsl:otherwise>														<xsl:value-of select="."/>													</xsl:otherwise>												</xsl:choose>											</xsl:for-each>										</td>									</xsl:if>									<xsl:if test="$altova:CurrContextGrid_3/($c11_show = &apos;true&apos;)">										<td style="width:{$c11_width}; " class="td_h_h_s1">											<xsl:for-each select="$c11_name">												<xsl:choose>													<xsl:when test=". instance of element() or . instance of document-node()">														<xsl:apply-templates/>													</xsl:when>													<xsl:otherwise>														<xsl:value-of select="."/>													</xsl:otherwise>												</xsl:choose>											</xsl:for-each>										</td>									</xsl:if>									<xsl:if test="$altova:CurrContextGrid_3/($c12_show = &apos;true&apos;)">										<td style="width:{$c12_width}; " class="td_h_h_s1">											<xsl:for-each select="$c12_name">												<xsl:choose>													<xsl:when test=". instance of element() or . instance of document-node()">														<xsl:apply-templates/>													</xsl:when>													<xsl:otherwise>														<xsl:value-of select="."/>													</xsl:otherwise>												</xsl:choose>											</xsl:for-each>										</td>									</xsl:if>									<xsl:if test="$altova:CurrContextGrid_3/($c13_show = &apos;true&apos;)">										<td style="width:{$c13_width}; " class="td_h_h_s1">											<xsl:for-each select="$c13_name">												<xsl:choose>													<xsl:when test=". instance of element() or . instance of document-node()">														<xsl:apply-templates/>													</xsl:when>													<xsl:otherwise>														<xsl:value-of select="."/>													</xsl:otherwise>												</xsl:choose>											</xsl:for-each>										</td>									</xsl:if>									<xsl:if test="$altova:CurrContextGrid_3/($c14_show = &apos;true&apos;)">										<td style="width:{$c14_width}; " class="td_h_h_s1">											<xsl:for-each select="$c14_name">												<xsl:choose>													<xsl:when test=". instance of element() or . instance of document-node()">														<xsl:apply-templates/>													</xsl:when>													<xsl:otherwise>														<xsl:value-of select="."/>													</xsl:otherwise>												</xsl:choose>											</xsl:for-each>										</td>									</xsl:if>									<xsl:if test="$altova:CurrContextGrid_3/($c15_show = &apos;true&apos;)">										<td style="width:{$c15_width}; " class="td_h_h_s1">											<xsl:for-each select="$c15_name">												<xsl:choose>													<xsl:when test=". instance of element() or . instance of document-node()">														<xsl:apply-templates/>													</xsl:when>													<xsl:otherwise>														<xsl:value-of select="."/>													</xsl:otherwise>												</xsl:choose>											</xsl:for-each>										</td>									</xsl:if>									<xsl:if test="$altova:CurrContextGrid_3/($c16_show = &apos;true&apos;)">										<td style="width:{$c16_width}; " class="td_h_h_s1">											<xsl:for-each select="$c16_name">												<xsl:choose>													<xsl:when test=". instance of element() or . instance of document-node()">														<xsl:apply-templates/>													</xsl:when>													<xsl:otherwise>														<xsl:value-of select="."/>													</xsl:otherwise>												</xsl:choose>											</xsl:for-each>										</td>									</xsl:if>									<xsl:if test="$altova:CurrContextGrid_3/($c17_show = &apos;true&apos;)">										<td style="width:{$c17_width}; " class="td_h_h_s1">											<xsl:for-each select="$c17_name">												<xsl:choose>													<xsl:when test=". instance of element() or . instance of document-node()">														<xsl:apply-templates/>													</xsl:when>													<xsl:otherwise>														<xsl:value-of select="."/>													</xsl:otherwise>												</xsl:choose>											</xsl:for-each>										</td>									</xsl:if>									<xsl:if test="$altova:CurrContextGrid_3/($c18_show = &apos;true&apos;)">										<td style="width:{$c18_width}; " class="td_h_h_s1">											<xsl:for-each select="$c18_name">												<xsl:choose>													<xsl:when test=". instance of element() or . instance of document-node()">														<xsl:apply-templates/>													</xsl:when>													<xsl:otherwise>														<xsl:value-of select="."/>													</xsl:otherwise>												</xsl:choose>											</xsl:for-each>										</td>									</xsl:if>									<xsl:if test="$altova:CurrContextGrid_3/($c19_show = &apos;true&apos;)">										<td style="width:{$c19_width}; " class="td_h_h_s1">											<xsl:for-each select="$c19_name">												<xsl:choose>													<xsl:when test=". instance of element() or . instance of document-node()">														<xsl:apply-templates/>													</xsl:when>													<xsl:otherwise>														<xsl:value-of select="."/>													</xsl:otherwise>												</xsl:choose>											</xsl:for-each>										</td>									</xsl:if>									<xsl:if test="$altova:CurrContextGrid_3/($c20_show = &apos;true&apos;)">										<td style="width:{$c20_width}; " class="td_h_h_s1">											<xsl:for-each select="$c20_name">												<xsl:choose>													<xsl:when test=". instance of element() or . instance of document-node()">														<xsl:apply-templates/>													</xsl:when>													<xsl:otherwise>														<xsl:value-of select="."/>													</xsl:otherwise>												</xsl:choose>											</xsl:for-each>										</td>									</xsl:if>									<xsl:if test="$altova:CurrContextGrid_3/($c21_show = &apos;true&apos;)">										<td style="width:{$c21_width}; " class="td_h_h_s1">											<xsl:for-each select="$c21_name">												<xsl:choose>													<xsl:when test=". instance of element() or . instance of document-node()">														<xsl:apply-templates/>													</xsl:when>													<xsl:otherwise>														<xsl:value-of select="."/>													</xsl:otherwise>												</xsl:choose>											</xsl:for-each>										</td>									</xsl:if>									<xsl:if test="$altova:CurrContextGrid_3/($c22_show = &apos;true&apos;)">										<td style="width:{$c22_width}; " class="td_h_h_s1">											<xsl:for-each select="$c22_name">												<xsl:choose>													<xsl:when test=". instance of element() or . instance of document-node()">														<xsl:apply-templates/>													</xsl:when>													<xsl:otherwise>														<xsl:value-of select="."/>													</xsl:otherwise>												</xsl:choose>											</xsl:for-each>										</td>									</xsl:if>									<xsl:if test="$altova:CurrContextGrid_3/($c23_show = &apos;true&apos;)">										<td style="width:{$c23_width}; " class="td_h_h_s1">											<xsl:for-each select="$c23_name">												<xsl:choose>													<xsl:when test=". instance of element() or . instance of document-node()">														<xsl:apply-templates/>													</xsl:when>													<xsl:otherwise>														<xsl:value-of select="."/>													</xsl:otherwise>												</xsl:choose>											</xsl:for-each>										</td>									</xsl:if>									<xsl:if test="$altova:CurrContextGrid_3/($c24_show = &apos;true&apos;)">										<td style="width:{$c24_width}; " class="td_h_h_s1">											<xsl:for-each select="$c24_name">												<xsl:choose>													<xsl:when test=". instance of element() or . instance of document-node()">														<xsl:apply-templates/>													</xsl:when>													<xsl:otherwise>														<xsl:value-of select="."/>													</xsl:otherwise>												</xsl:choose>											</xsl:for-each>										</td>									</xsl:if>									<xsl:if test="$altova:CurrContextGrid_3/($c25_show = &apos;true&apos;)">										<td style="width:{$c25_width}; " class="td_h_h_s1">											<xsl:for-each select="$c25_name">												<xsl:choose>													<xsl:when test=". instance of element() or . instance of document-node()">														<xsl:apply-templates/>													</xsl:when>													<xsl:otherwise>														<xsl:value-of select="."/>													</xsl:otherwise>												</xsl:choose>											</xsl:for-each>										</td>									</xsl:if>									<xsl:if test="$altova:CurrContextGrid_3/($c26_show = &apos;true&apos;)">										<td style="width:{$c26_width}; " class="td_h_h_s1">											<xsl:for-each select="$c26_name">												<xsl:choose>													<xsl:when test=". instance of element() or . instance of document-node()">														<xsl:apply-templates/>													</xsl:when>													<xsl:otherwise>														<xsl:value-of select="."/>													</xsl:otherwise>												</xsl:choose>											</xsl:for-each>										</td>									</xsl:if>									<xsl:if test="$altova:CurrContextGrid_3/($c27_show = &apos;true&apos;)">										<td style="width:{$c27_width}; " class="td_h_h_s1">											<xsl:for-each select="$c27_name">												<xsl:choose>													<xsl:when test=". instance of element() or . instance of document-node()">														<xsl:apply-templates/>													</xsl:when>													<xsl:otherwise>														<xsl:value-of select="."/>													</xsl:otherwise>												</xsl:choose>											</xsl:for-each>										</td>									</xsl:if>									<xsl:if test="$altova:CurrContextGrid_3/($c28_show = &apos;true&apos;)">										<td style="width:{$c28_width}; " class="td_h_h_s1">											<xsl:for-each select="$c28_name">												<xsl:choose>													<xsl:when test=". instance of element() or . instance of document-node()">														<xsl:apply-templates/>													</xsl:when>													<xsl:otherwise>														<xsl:value-of select="."/>													</xsl:otherwise>												</xsl:choose>											</xsl:for-each>										</td>									</xsl:if>									<xsl:if test="$altova:CurrContextGrid_3/($c29_show = &apos;true&apos;)">										<td style="width:{$c29_width}; " class="td_h_h_s1">											<xsl:for-each select="$c29_name">												<xsl:choose>													<xsl:when test=". instance of element() or . instance of document-node()">														<xsl:apply-templates/>													</xsl:when>													<xsl:otherwise>														<xsl:value-of select="."/>													</xsl:otherwise>												</xsl:choose>											</xsl:for-each>										</td>									</xsl:if>									<xsl:if test="$altova:CurrContextGrid_3/($c30_show = &apos;true&apos;)">										<td style="width:{$c30_width}; " class="td_h_h_s1">											<xsl:for-each select="$c30_name">												<xsl:choose>													<xsl:when test=". instance of element() or . instance of document-node()">														<xsl:apply-templates/>													</xsl:when>													<xsl:otherwise>														<xsl:value-of select="."/>													</xsl:otherwise>												</xsl:choose>											</xsl:for-each>										</td>									</xsl:if>								</tr>							</tbody>						</table>					</xsl:variable>					<xsl:variable name="altova:col-count" select="sum( for $altova:cell in $altova:table/table/(thead | tbody | tfoot)[ 1 ]/tr[ 1 ]/(th | td) return altova:col-span( $altova:cell ) )"/>					<xsl:variable name="altova:generate-cols" as="xs:boolean*" select="for $altova:pos in 1 to $altova:col-count return true()"/>					<xsl:apply-templates select="$altova:table" mode="altova:generate-table">						<xsl:with-param name="altova:generate-cols" select="$altova:generate-cols"/>					</xsl:apply-templates>				</xsl:for-each>				<xsl:for-each select="$sectionData">					<xsl:for-each select="n1:object">						<xsl:for-each select="n1:values">							<xsl:variable name="altova:table">								<table style="width:{$sectionDescription/@tw}; ">									<xsl:variable name="altova:CurrContextGrid_4" select="."/>									<xsl:variable name="altova:ColumnData"/>									<tbody>										<tr>											<xsl:if test="$altova:CurrContextGrid_4/($c1_show = &apos;true&apos;)">												<td style="width:{$c1_width}; " class="td">													<xsl:for-each select="n1:v1">														<xsl:apply-templates/>													</xsl:for-each>												</td>											</xsl:if>											<xsl:if test="$altova:CurrContextGrid_4/($c2_show = &apos;true&apos;)">												<td style="width:{$c2_width}; " class="td">													<xsl:for-each select="n1:v2">														<xsl:apply-templates/>													</xsl:for-each>												</td>											</xsl:if>											<xsl:if test="$altova:CurrContextGrid_4/($c3_show = &apos;true&apos;)">												<td style="width:{$c3_width}; " class="td">													<xsl:for-each select="n1:v3">														<xsl:apply-templates/>													</xsl:for-each>												</td>											</xsl:if>											<xsl:if test="$altova:CurrContextGrid_4/($c4_show = &apos;true&apos;)">												<td style="width:{$c4_width}; " class="td">													<xsl:for-each select="n1:v4">														<xsl:apply-templates/>													</xsl:for-each>												</td>											</xsl:if>											<xsl:if test="$altova:CurrContextGrid_4/($c5_show = &apos;true&apos;)">												<td style="width:{$c5_width}; " class="td">													<xsl:for-each select="n1:v5">														<xsl:apply-templates/>													</xsl:for-each>												</td>											</xsl:if>											<xsl:if test="$altova:CurrContextGrid_4/($c6_show = &apos;true&apos;)">												<td style="width:{$c6_width}; " class="td">													<xsl:for-each select="n1:v6">														<xsl:apply-templates/>													</xsl:for-each>												</td>											</xsl:if>											<xsl:if test="$altova:CurrContextGrid_4/($c7_show = &apos;true&apos;)">												<td style="width:{$c7_width}; " class="td">													<xsl:for-each select="n1:v7">														<xsl:apply-templates/>													</xsl:for-each>												</td>											</xsl:if>											<xsl:if test="$altova:CurrContextGrid_4/($c8_show = &apos;true&apos;)">												<td style="width:{$c8_width}; " class="td">													<xsl:for-each select="n1:v8">														<xsl:apply-templates/>													</xsl:for-each>												</td>											</xsl:if>											<xsl:if test="$altova:CurrContextGrid_4/($c9_show = &apos;true&apos;)">												<td style="width:{$c9_width}; " class="td">													<xsl:for-each select="n1:v9">														<xsl:apply-templates/>													</xsl:for-each>												</td>											</xsl:if>											<xsl:if test="$altova:CurrContextGrid_4/($c10_show = &apos;true&apos;)">												<td style="width:{$c10_width}; " class="td">													<xsl:for-each select="n1:v10">														<xsl:apply-templates/>													</xsl:for-each>												</td>											</xsl:if>											<xsl:if test="$altova:CurrContextGrid_4/($c11_show = &apos;true&apos;)">												<td style="width:{$c11_width}; " class="td">													<xsl:for-each select="n1:v11">														<xsl:apply-templates/>													</xsl:for-each>												</td>											</xsl:if>											<xsl:if test="$altova:CurrContextGrid_4/($c12_show = &apos;true&apos;)">												<td style="width:{$c12_width}; " class="td">													<xsl:for-each select="n1:v12">														<xsl:apply-templates/>													</xsl:for-each>												</td>											</xsl:if>											<xsl:if test="$altova:CurrContextGrid_4/($c13_show = &apos;true&apos;)">												<td style="width:{$c13_width}; " class="td">													<xsl:for-each select="n1:v13">														<xsl:apply-templates/>													</xsl:for-each>												</td>											</xsl:if>											<xsl:if test="$altova:CurrContextGrid_4/($c14_show = &apos;true&apos;)">												<td style="width:{$c14_width}; " class="td">													<xsl:for-each select="n1:v14">														<xsl:apply-templates/>													</xsl:for-each>												</td>											</xsl:if>											<xsl:if test="$altova:CurrContextGrid_4/($c15_show = &apos;true&apos;)">												<td style="width:{$c15_width}; " class="td">													<xsl:for-each select="n1:v15">														<xsl:apply-templates/>													</xsl:for-each>												</td>											</xsl:if>											<xsl:if test="$altova:CurrContextGrid_4/($c16_show = &apos;true&apos;)">												<td style="width:{$c16_width}; " class="td">													<xsl:for-each select="n1:v16">														<xsl:apply-templates/>													</xsl:for-each>												</td>											</xsl:if>											<xsl:if test="$altova:CurrContextGrid_4/($c17_show = &apos;true&apos;)">												<td style="width:{$c17_width}; " class="td">													<xsl:for-each select="n1:v17">														<xsl:apply-templates/>													</xsl:for-each>												</td>											</xsl:if>											<xsl:if test="$altova:CurrContextGrid_4/($c18_show = &apos;true&apos;)">												<td style="width:{$c18_width}; " class="td">													<xsl:for-each select="n1:v18">														<xsl:apply-templates/>													</xsl:for-each>												</td>											</xsl:if>											<xsl:if test="$altova:CurrContextGrid_4/($c19_show = &apos;true&apos;)">												<td style="width:{$c19_width}; " class="td">													<xsl:for-each select="n1:v19">														<xsl:apply-templates/>													</xsl:for-each>												</td>											</xsl:if>											<xsl:if test="$altova:CurrContextGrid_4/($c20_show = &apos;true&apos;)">												<td style="width:{$c20_width}; " class="td">													<xsl:for-each select="n1:v20">														<xsl:apply-templates/>													</xsl:for-each>												</td>											</xsl:if>											<xsl:if test="$altova:CurrContextGrid_4/($c21_show = &apos;true&apos;)">												<td style="width:{$c21_width}; " class="td">													<xsl:for-each select="n1:v21">														<xsl:apply-templates/>													</xsl:for-each>												</td>											</xsl:if>											<xsl:if test="$altova:CurrContextGrid_4/($c22_show = &apos;true&apos;)">												<td style="width:{$c22_width}; " class="td">													<xsl:for-each select="n1:v22">														<xsl:apply-templates/>													</xsl:for-each>												</td>											</xsl:if>											<xsl:if test="$altova:CurrContextGrid_4/($c23_show = &apos;true&apos;)">												<td style="width:{$c23_width}; " class="td">													<xsl:for-each select="n1:v23">														<xsl:apply-templates/>													</xsl:for-each>												</td>											</xsl:if>											<xsl:if test="$altova:CurrContextGrid_4/($c24_show = &apos;true&apos;)">												<td style="width:{$c24_width}; " class="td">													<xsl:for-each select="n1:v24">														<xsl:apply-templates/>													</xsl:for-each>												</td>											</xsl:if>											<xsl:if test="$altova:CurrContextGrid_4/($c25_show = &apos;true&apos;)">												<td style="width:{$c25_width}; " class="td">													<xsl:for-each select="n1:v25">														<xsl:apply-templates/>													</xsl:for-each>												</td>											</xsl:if>											<xsl:if test="$altova:CurrContextGrid_4/($c26_show = &apos;true&apos;)">												<td style="width:{$c26_width}; " class="td">													<xsl:for-each select="n1:v26">														<xsl:apply-templates/>													</xsl:for-each>												</td>											</xsl:if>											<xsl:if test="$altova:CurrContextGrid_4/($c27_show = &apos;true&apos;)">												<td style="width:{$c27_width}; " class="td">													<xsl:for-each select="n1:v27">														<xsl:apply-templates/>													</xsl:for-each>												</td>											</xsl:if>											<xsl:if test="$altova:CurrContextGrid_4/($c28_show = &apos;true&apos;)">												<td style="width:{$c28_width}; " class="td">													<xsl:for-each select="n1:v28">														<xsl:apply-templates/>													</xsl:for-each>												</td>											</xsl:if>											<xsl:if test="$altova:CurrContextGrid_4/($c29_show = &apos;true&apos;)">												<td style="width:{$c29_width}; " class="td">													<xsl:for-each select="n1:v29">														<xsl:apply-templates/>													</xsl:for-each>												</td>											</xsl:if>											<xsl:if test="$altova:CurrContextGrid_4/($c30_show = &apos;true&apos;)">												<td style="width:{$c30_width}; " class="td">													<xsl:for-each select="n1:v30">														<xsl:apply-templates/>													</xsl:for-each>												</td>											</xsl:if>										</tr>									</tbody>								</table>							</xsl:variable>							<xsl:variable name="altova:col-count" select="sum( for $altova:cell in $altova:table/table/(thead | tbody | tfoot)[ 1 ]/tr[ 1 ]/(th | td) return altova:col-span( $altova:cell ) )"/>							<xsl:variable name="altova:generate-cols" as="xs:boolean*" select="for $altova:pos in 1 to $altova:col-count return true()"/>							<xsl:apply-templates select="$altova:table" mode="altova:generate-table">								<xsl:with-param name="altova:generate-cols" select="$altova:generate-cols"/>							</xsl:apply-templates>						</xsl:for-each>					</xsl:for-each>				</xsl:for-each>			</div>		</xsl:if>	</xsl:template>	<xsl:function name="altova:is-cell-empty" as="xs:boolean">		<xsl:param name="altova:cell" as="element()"/>		<xsl:sequence select="altova:is-node-empty( $altova:cell )"/>	</xsl:function>	<xsl:function name="altova:is-node-empty" as="xs:boolean">		<xsl:param name="altova:node" as="element()"/>		<xsl:sequence select="every $altova:child in $altova:node/child::node() satisfies ( ( boolean( $altova:child/self::text() ) and string-length( $altova:child ) = 0 ) or ( ( boolean( $altova:child/self::div ) or boolean( $altova:child/self::span ) or boolean( $altova:child/self::a ) ) and altova:is-node-empty( $altova:child ) ) )"/>	</xsl:function>	<xsl:function name="altova:col-span" as="xs:integer">		<xsl:param name="altova:cell" as="element()"/>		<xsl:sequence select="if ( exists( $altova:cell/@colspan ) ) then xs:integer( $altova:cell/@colspan ) else 1"/>	</xsl:function>	<xsl:template match="@* | node()" mode="altova:generate-table">		<xsl:param name="altova:generate-cols"/>		<xsl:copy>			<xsl:apply-templates select="@* | node()" mode="#current">				<xsl:with-param name="altova:generate-cols" select="$altova:generate-cols"/>			</xsl:apply-templates>		</xsl:copy>	</xsl:template>	<xsl:template match="tbody" mode="altova:generate-table">		<xsl:param name="altova:generate-cols"/>		<xsl:choose>			<xsl:when test="empty(tr)">				<xsl:copy>					<tr>						<td/>					</tr>				</xsl:copy>			</xsl:when>			<xsl:otherwise>				<xsl:copy>					<xsl:apply-templates select="@* | node()" mode="#current">						<xsl:with-param name="altova:generate-cols" select="$altova:generate-cols"/>					</xsl:apply-templates>				</xsl:copy>			</xsl:otherwise>		</xsl:choose>	</xsl:template>	<xsl:template match="th | td" mode="altova:generate-table">		<xsl:choose>			<xsl:when test="altova:is-cell-empty( . )">				<xsl:copy>					<xsl:apply-templates select="@*" mode="#current"/>					<xsl:text>&#160;</xsl:text>				</xsl:copy>			</xsl:when>			<xsl:otherwise>				<xsl:copy>					<xsl:apply-templates select="@* | node()" mode="#current"/>				</xsl:copy>			</xsl:otherwise>		</xsl:choose>	</xsl:template>	<xsl:function name="altova:GetChartYValuesForSingleSeries">		<xsl:param name="seqCategoryLeafPos" as="node()*"/>		<xsl:param name="nodeSeriesLeafPos" as="node()"/>		<xsl:param name="bValuesInCategory" as="xs:boolean"/>		<xsl:for-each select="$seqCategoryLeafPos">			<xsl:element name="altova:Value">				<xsl:value-of select="altova:GetChartYValueForSingleSeriesPos($nodeSeriesLeafPos, ., $bValuesInCategory)"/>			</xsl:element>		</xsl:for-each>	</xsl:function>	<xsl:function name="altova:GetChartYValueForSingleSeriesPos">		<xsl:param name="nodeSeriesLeafPos" as="node()"/>		<xsl:param name="nodeCategoryLeafPos" as="node()"/>		<xsl:param name="bValuesInCategory" as="xs:boolean"/>		<xsl:variable name="altova:seqCategoryContextIds" select="$nodeCategoryLeafPos/altova:Context/@altova:ContextId" as="xs:string*"/>		<xsl:variable name="altova:seqSeriesContextIds" select="$nodeSeriesLeafPos/altova:Context/@altova:ContextId" as="xs:string*"/>		<xsl:variable name="altova:sCommonContextId" select="for $i in $altova:seqCategoryContextIds return if (some $j in $altova:seqSeriesContextIds satisfies $i eq $j) then $i else ()" as="xs:string*"/>		<xsl:choose>			<xsl:when test="count($altova:sCommonContextId) gt 1">				<xsl:message select="concat('Found several values instead of a single one (contexts: ', string-join($altova:sCommonContextId, ', '), ').')" terminate="yes"/>			</xsl:when>			<xsl:when test="count($altova:sCommonContextId) lt 1">				<xsl:message select="concat('XBRL Chart: Info: No value found for position labeled &quot;', $nodeCategoryLeafPos/@altova:sLabel, '&quot;')" terminate="no"/>				<xsl:sequence select="'altova:no-value'"/>			</xsl:when>			<xsl:when test="$bValuesInCategory">				<xsl:sequence select="xs:string($nodeCategoryLeafPos/altova:Context[@altova:ContextId eq $altova:sCommonContextId]/@altova:Value)"/>			</xsl:when>			<xsl:otherwise>				<xsl:sequence select="xs:string($nodeSeriesLeafPos/altova:Context[@altova:ContextId eq $altova:sCommonContextId]/@altova:Value)"/>			</xsl:otherwise>		</xsl:choose>	</xsl:function>	<xsl:function name="altova:GetChartLabelForPos" as="xs:string">		<xsl:param name="nodeParam" as="node()"/>		<xsl:value-of select="string-join($nodeParam/ancestor-or-self::altova:Pos/@altova:sLabel, ' ')"/>	</xsl:function>	<xsl:function name="altova:convert-length-to-pixel" as="xs:decimal">		<xsl:param name="altova:length"/>		<xsl:variable name="normLength" select="normalize-space($altova:length)"/>		<xsl:choose>			<xsl:when test="ends-with($normLength, 'px')">				<xsl:value-of select="substring-before($normLength, 'px')"/>			</xsl:when>			<xsl:when test="ends-with($normLength, 'in')">				<xsl:value-of select="xs:decimal(substring-before($normLength, 'in')) * $altova:nPxPerIn"/>			</xsl:when>			<xsl:when test="ends-with($normLength, 'cm')">				<xsl:value-of select="xs:decimal(substring-before($normLength, 'cm')) * $altova:nPxPerIn div 2.54"/>			</xsl:when>			<xsl:when test="ends-with($normLength, 'mm')">				<xsl:value-of select="xs:decimal(substring-before($normLength, 'mm')) * $altova:nPxPerIn div 25.4"/>			</xsl:when>			<xsl:when test="ends-with($normLength, 'pt')">				<xsl:value-of select="xs:decimal(substring-before($normLength, 'pt')) * $altova:nPxPerIn div 72.0"/>			</xsl:when>			<xsl:when test="ends-with($normLength, 'pc')">				<xsl:value-of select="xs:decimal(substring-before($normLength, 'pc')) * $altova:nPxPerIn div 6.0"/>			</xsl:when>			<xsl:otherwise>				<xsl:value-of select="$normLength"/>			</xsl:otherwise>		</xsl:choose>	</xsl:function>	<xsl:function name="altova:convert-length-to-mm" as="xs:decimal">		<xsl:param name="altova:length"/>		<xsl:variable name="normLength" select="normalize-space($altova:length)"/>		<xsl:choose>			<xsl:when test="ends-with($normLength, 'px')">				<xsl:value-of select="xs:decimal(substring-before($normLength, 'px')) div $altova:nPxPerIn * 25.4"/>			</xsl:when>			<xsl:when test="ends-with($normLength, 'in')">				<xsl:value-of select="xs:decimal(substring-before($normLength, 'in')) * 25.4"/>			</xsl:when>			<xsl:when test="ends-with($normLength, 'cm')">				<xsl:value-of select="xs:decimal(substring-before($normLength, 'cm')) * 10"/>			</xsl:when>			<xsl:when test="ends-with($normLength, 'mm')">				<xsl:value-of select="substring-before($normLength, 'mm') "/>			</xsl:when>			<xsl:when test="ends-with($normLength, 'pt')">				<xsl:value-of select="xs:decimal(substring-before($normLength, 'pt')) * 25.4 div 72.0"/>			</xsl:when>			<xsl:when test="ends-with($normLength, 'pc')">				<xsl:value-of select="xs:decimal(substring-before($normLength, 'pc')) * 25.4 div 6.0"/>			</xsl:when>			<xsl:otherwise>				<xsl:value-of select="number($normLength) div $altova:nPxPerIn * 25.4"/>			</xsl:otherwise>		</xsl:choose>	</xsl:function></xsl:stylesheet>