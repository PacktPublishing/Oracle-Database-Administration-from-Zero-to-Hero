<?xml version="1.0" encoding="UTF-8"?><!--Designed and generated by Altova StyleVision Enterprise Edition 2014 (x64) - see http://www.altova.com/stylevision for more information.--><xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:altova="http://www.altova.com" xmlns:altovaext="http://www.altova.com/xslt-extensions" xmlns:clitype="clitype" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:iso4217="http://www.xbrl.org/2003/iso4217" xmlns:ix="http://www.xbrl.org/2008/inlineXBRL" xmlns:java="java" xmlns:link="http://www.xbrl.org/2003/linkbase" xmlns:n1="http://oracle.com/datamodeler/reports/udp" xmlns:sps="http://www.altova.com/StyleVision/user-xpath-functions" xmlns:xbrldi="http://xbrl.org/2006/xbrldi" xmlns:xbrli="http://www.xbrl.org/2003/instance" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" exclude-result-prefixes="altova altovaext clitype fn iso4217 ix java link n1 sps xbrldi xbrli xlink xs xsd xsi">	<xsl:output version="4.0" method="html" indent="no" encoding="UTF-8" doctype-public="-//W3C//DTD HTML 4.01 Transitional//EN" doctype-system="http://www.w3.org/TR/html4/loose.dtd"/>	<xsl:param name="SV_OutputFormat" select="'HTML'"/>	<xsl:param name="p1"/>	<xsl:param name="p2"/>	<xsl:variable name="XML" select="/"/>	<xsl:variable name="altova:nPxPerIn" select="96"/>	<xsl:template match="/">		<html>			<head>				<title/>				<meta name="generator" content="Altova StyleVision Enterprise Edition 2014 (x64) (http://www.altova.com)"/>				<meta http-equiv="X-UA-Compatible" content="IE=7"/>				<xsl:value-of select="normalize-space(concat('&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;', $p1, '&quot;>'))" disable-output-escaping="yes"/>                <xsl:value-of select="normalize-space(concat('&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;', $p2, '&quot;>'))" disable-output-escaping="yes"/>				<xsl:comment>[if IE]&gt;&lt;STYLE type=&quot;text/css&quot;&gt;.altova-rotate-left-textbox{filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3)} .altova-rotate-right-textbox{filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=1)} &lt;/STYLE&gt;&lt;![endif]</xsl:comment>				<xsl:comment>[if !IE]&gt;&lt;!</xsl:comment>				<style type="text/css">.altova-rotate-left-textbox{-webkit-transform: rotate(-90deg) translate(-100%, 0%); -webkit-transform-origin: 0% 0%;-moz-transform: rotate(-90deg) translate(-100%, 0%); -moz-transform-origin: 0% 0%;-ms-transform: rotate(-90deg) translate(-100%, 0%); -ms-transform-origin: 0% 0%;}.altova-rotate-right-textbox{-webkit-transform: rotate(90deg) translate(0%, -100%); -webkit-transform-origin: 0% 0%;-moz-transform: rotate(90deg) translate(0%, -100%); -moz-transform-origin: 0% 0%;-ms-transform: rotate(90deg) translate(0%, -100%); -ms-transform-origin: 0% 0%;}</style>				<xsl:comment>&lt;![endif]</xsl:comment>				<style type="text/css">@page { margin-left:2cm; margin-right:2cm; margin-top:2cm; margin-bottom:2cm } @media print { br.altova-page-break { page-break-before: always; } }</style>			</head>			<body style="font-family:Tahoma; font-size:xx-small; ">				<xsl:for-each select="$XML">					<xsl:for-each select="n1:UDP">						<center>							<xsl:for-each select="n1:ReportCaption">								<span class="caption">									<xsl:apply-templates/>								</span>							</xsl:for-each>						</center>						<p/>						<table style="width:20cm; " class="w_20">							<xsl:variable name="altova:CurrContextGrid_0" select="."/>							<tbody>								<tr>									<th class="td_h_v w_4">										<span>											<xsl:text>Design Name</xsl:text>										</span>									</th>									<td class="td w_16">										<xsl:for-each select="n1:DesignName">											<xsl:apply-templates/>										</xsl:for-each>									</td>								</tr>								<tr>									<th class="td_h_v">										<span>											<xsl:text>Version Date</xsl:text>										</span>									</th>									<td class="td">										<xsl:for-each select="n1:VersionDate">											<xsl:apply-templates/>										</xsl:for-each>									</td>								</tr>								<tr>									<th class="td_h_v">										<span>											<xsl:text>Version Comment</xsl:text>										</span>									</th>									<td class="td">										<xsl:for-each select="n1:VersionComment">											<xsl:apply-templates/>										</xsl:for-each>									</td>								</tr>							</tbody>						</table>						<p/>						<table class="w_25">							<xsl:variable name="altova:CurrContextGrid_1" select="."/>							<thead>								<tr>									<th class="td_h_h w_5">										<span>											<xsl:text>Name</xsl:text>										</span>										<br/>										<span>											<xsl:text>File Name</xsl:text>										</span>									</th>									<th class="td_h_h w_5">										<span>											<xsl:text>Display Name</xsl:text>										</span>									</th>									<th class="td_h_h w_1">										<span>											<xsl:text>Type</xsl:text>										</span>									</th>									<th class="td_h_h w_4">										<span>											<xsl:text>Description</xsl:text>										</span>									</th>									<th class="td_h_h w_4">										<span>											<xsl:text>Objects</xsl:text>										</span>									</th>									<th class="td_h_h w_3">										<span>											<xsl:text>List Of Values</xsl:text>										</span>									</th>									<th class="td_h_h w_1p5">										<span>											<xsl:text>Default Value</xsl:text>										</span>									</th>								</tr>							</thead>							<tbody>								<xsl:for-each select="n1:UDPCollection">									<xsl:for-each select="n1:UDPDetails">										<tr>											<td class="td">												<a>													<xsl:attribute name="name">														<xsl:value-of select="n1:Name"/>													</xsl:attribute>													<xsl:choose>														<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">															<xsl:choose>																<xsl:when test="string-length(n1:Name) &gt; 0">																	<xsl:for-each select="n1:Name">																		<span>																			<xsl:value-of select="substring-before(.,&apos;/&apos;)"/>																		</span>																		<br/>																		<br/>																		<div>																			<span>																				<xsl:value-of select="substring-after(.,&apos;/&apos;)"/>																			</span>																		</div>																	</xsl:for-each>																</xsl:when>																<xsl:otherwise>																	<span>																		<xsl:text>&#160;</xsl:text>																	</span>																</xsl:otherwise>															</xsl:choose>														</xsl:when>														<xsl:otherwise>															<xsl:for-each select="n1:Name">																<span>																	<xsl:value-of select="substring-before(.,&apos;/&apos;)"/>																</span>																<br/>																<br/>																<div>																	<span>																		<xsl:value-of select="substring-after(.,&apos;/&apos;)"/>																	</span>																</div>															</xsl:for-each>														</xsl:otherwise>													</xsl:choose>												</a>											</td>											<td class="td">												<xsl:for-each select="n1:DisplayName">													<xsl:apply-templates/>												</xsl:for-each>											</td>											<td class="td_c">												<xsl:for-each select="n1:Type">													<xsl:apply-templates/>												</xsl:for-each>											</td>											<td class="td">												<xsl:for-each select="n1:Description">													<xsl:apply-templates/>													<br/>												</xsl:for-each>											</td>											<td class="td">												<xsl:if test="count(n1:ObjectsScopeCollection)">													<table>														<xsl:variable name="altova:CurrContextGrid_2" select="."/>														<thead>															<tr>																<th class="td_h_h w_1p8">																	<span>																		<xsl:text>Object Type</xsl:text>																	</span>																</th>																<th class="td_h_h w_1">																	<span>																		<xsl:text>Visible</xsl:text>																	</span>																</th>																<th class="td_h_h w_1">																	<span>																		<xsl:text>Color</xsl:text>																	</span>																</th>															</tr>														</thead>														<tbody>															<xsl:for-each select="n1:ObjectsScopeCollection">																<xsl:for-each select="n1:ObjectDetails">																	<tr>																		<td class="td">																			<xsl:for-each select="n1:Type">																				<xsl:apply-templates/>																			</xsl:for-each>																		</td>																		<td class="td">																			<xsl:for-each select="n1:IsVisible">																				<xsl:apply-templates/>																			</xsl:for-each>																		</td>																		<td class="td">																			<table width="100%">																				<xsl:variable name="altova:CurrContextGrid_3" select="."/>																				<tbody>																					<tr>																						<td style="background-color:{n1:Color}; " class="td">																							<span>																								<xsl:text>&#160;</xsl:text>																							</span>																							<xsl:for-each select="n1:Color"/>																						</td>																					</tr>																				</tbody>																			</table>																		</td>																	</tr>																</xsl:for-each>															</xsl:for-each>														</tbody>													</table>												</xsl:if>											</td>											<td class="td">												<xsl:if test="count(n1:LOVCollection)">													<table>														<xsl:variable name="altova:CurrContextGrid_4" select="."/>														<tbody>															<xsl:for-each select="n1:LOVCollection">																<xsl:for-each select="n1:LOVDetails">																	<tr>																		<td>																			<xsl:for-each select="n1:Value">																				<xsl:apply-templates/>																			</xsl:for-each>																		</td>																	</tr>																</xsl:for-each>															</xsl:for-each>														</tbody>													</table>												</xsl:if>											</td>											<td class="td">												<xsl:for-each select="n1:DefaultValue">													<xsl:apply-templates/>												</xsl:for-each>											</td>										</tr>									</xsl:for-each>								</xsl:for-each>							</tbody>						</table>					</xsl:for-each>				</xsl:for-each>			</body>		</html>	</xsl:template></xsl:stylesheet>